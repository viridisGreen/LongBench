{"pred": "\t\t\t\tif ( m_Participants[i].Gump is DuelContextGump )\n\t\t\t\t\tm_Participants[i].Gump.Close();\n\t\t\t\telse if ( m_Participants[i].Gump is Participant", "answers": ["\t\t\t\tParticipant p = (Participant)m_Participants[i];"], "all_classes": null, "length": 5243}
{"pred": "\t\t\tZ_.add_edge(e_v, root, **data.copy())\n\t\t\t\n\t\t\tif j in [1,3,5]:\n\t\t\t\tP.put( (-w, e, A, Y, Z))\n\t\t\telse:", "answers": ["\t\t\tZ_.add_edge(e_u, e_v, **data.copy())"], "all_classes": null, "length": 1069}
{"pred": "       a = Sndfile(ofilename, 'r')\n        buff = a.read_frames(1024)\n        a.seek(1000)\n        buff2 = a.read_frames(1024)\n        assert_array_equal", "answers": ["        rfd, fd, cfilename   = open_tmp_file('rwseektest.wav')"], "all_classes": null, "length": 844}
{"pred": "self.videos.feature_video()\nself.videos.unfeature_video()\nself.videos.displays_subtitle_me()\nself.videos.click_subtitle_me()\nself.videos.displays_add_subtitles()\nself", "answers": ["            if e.text == language:"], "all_classes": null, "length": 462}
{"pred": "\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;\n\t\t\t\t\twriter.addAttribute(\"value\", styleValue.getStyleValue());\n\t\t\t\t\twriter.addAttribute(\"style\", styleValue.getStyle());\n\t\t\t\t}\n", "answers": ["\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;"], "all_classes": null, "length": 570}
{"pred": "       if self.type == TYPE_ANAGRAMS:\n            ret = \"Anagram of the word %s\" % self.question\n        elif self.type == TYPE_TRIVIA:\n            ret = \"Trivia question %s\" % self.question\n       ", "answers": ["        longest = max(self.answers)"], "all_classes": null, "length": 1229}
{"pred": "                   mob.Prompt = new SR_TargetLocationPrompt(mob.Account, mob.Map, mob.Location);\n                    Send(mob, SR_Utilities.FetchInfo(mob.Account));\n                    break;\n                case 3:\n                    mob", "answers": ["                    mob.Target = new SR_NewRuneTarget(RuneAcc);"], "all_classes": null, "length": 907}
{"pred": "           s.print(\"Chain: \");\n            for (X509Certificate cert : chain) {\n                s.print(cert.getServerName());\n                s.println(\"\");\n            }\n            s.println(\"**\");\n        }\n    }\n}\n}\n", "answers": ["            for (int i = 0; i < chain.length; i++)"], "all_classes": null, "length": 1820}
{"pred": "           sp = new JESpace (name, path);\n            spaceRegistrar.put (name, sp);\n        }\nreturn sp;\n}\npublic static void register (JESpace sp) {\nregister (sp, null);\n}\npublic static void unregister (JES", "answers": ["            sp = new JESpace(name, path);"], "all_classes": null, "length": 1096}
{"pred": "\t\t\t\t\tpos = btnEnergizeAll.bottom();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tSample.sample(Assets.SOUND_SELECTION_SOUND);\n\t\t\t\t\t\tGLog.", "answers": ["\t\t\t\t\tpos = btnEnergizeAll.bottom();"], "all_classes": null, "length": 567}
{"pred": "       request = Request(environ)\n        # request.environ = environ\n        # request.start_response = start_response\n        # request.dispatch = dispatcher.dispatch\n        # request.pretty = pretty\n        # request.debug = debug\n        # request.soap_ns =", "answers": ["        length = int(environ['CONTENT_LENGTH'])"], "all_classes": null, "length": 1670}
{"pred": "       self.webview.execute_javascript(\"setRepeated('%s');\" % status_id)\n    def unmark_status_as_repeated(status_id):\n        mark = \"unsetRepeated('%s');\" % status_id\n        self", "answers": ["        mark = \"setRepeated('%s');\" % status_id"], "all_classes": null, "length": 686}
{"pred": "   }\n    def run_subprocess(self, self_logger, worker_object, status_id, action, data):\n        # todo: implement subprocess worker functionality\n        pass\n        # raise Exception(\"Implement subprocess worker functionality\")\n        # return None\n    }\n   ", "answers": ["            return {\"error\": False}"], "all_classes": null, "length": 958}
{"pred": "\t\t\tAssert.Throws (ArgumentException.ArgumentType, () => a.Union (b));\n\t\t\t// note: can't be tested with PermissionState.Unrestricted\n\t\t}\n\t\t[Test]\n\t\tpublic void Interop ()\n\t\t", "answers": ["\t\t\tIPermission result = a.Union (b);"], "all_classes": null, "length": 778}
{"pred": "   if cert_file is None:\n        cert_file = \"CERT_CERTS.txt\"\n    else:\n        cert_file = cert_file\n    if key_file is None:\n        key_file = \"KEY_CERTS.txt\"\n    else", "answers": ["        certs = []"], "all_classes": null, "length": 713}
{"pred": "   }\n    private void doDomainAdminForward(HttpServletRequest request,\n                                      String domain)\n    {\n    }\n    private String findForward(Executive executive, String name,\n                                  String url)\n    {\n    }\n    private String getDomain", "answers": ["        User user = getUser(request);"], "all_classes": null, "length": 847}
{"pred": "\n    from editor_main_pb2 import editor_main\n    from editor_main_pb2.render import *\n    from editor_main_pb2.audio import *\n    from editor_main_pb2.video import *\n    from editor_main_pb2.movie import", "answers": ["            self.__tmp_dir, 'datastream.%s.pipe' % uuid.uuid4().hex)"], "all_classes": null, "length": 1276}
{"pred": "\t\t\t\tif (option1 == true) {\n\t\t\t\t\tjumpID = store.GetValue (iter, 1); //uniqueID\n\t\t\t\t\tCreateJump (jumpID, newPersonWeight, jumpWeightPercent);\n\t\t\t\t}\n", "answers": ["\t\t\t\tif(! option1) {"], "all_classes": null, "length": 957}
{"pred": "String[] argValues = new String[args.length];\nfor (int i = 0; i < args.length; i++) {\nif (args[i] == null) {\nargValues[i] = null\nnull;\nargValues[i] = defaultMessages.getArg", "answers": ["        if ((args == null) || (args.length == 0)) {"], "all_classes": null, "length": 1570}
{"pred": "\t\t\t\tfirms = loadFromFile();\n\t\t\t}\n\t\t}, TIMED_DATA(new ConfigFile<UUID, TimedData>()\n\t\t{\n\t\t\t@Override\n\t\t\tpublic TimedData create(UUID id, ConfigurationSection conf", "answers": ["\t\t\t\tfirms = loadFromFile();"], "all_classes": null, "length": 515}
{"pred": "\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {\n\t\t\t@Override\n\t\t\tprotected void createFieldEditors() {\n\t\t\t\taddField(new FontFieldEditor(FONT, FONT_SIZE, FONT_COLOR,", "answers": ["\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {"], "all_classes": null, "length": 925}
{"pred": "           }\n        }\n        public class InternalTarget : Target\n        {\n            private ArchProtectionSpell m_Owner;\n            public InternalTarget(ArchProtectionSpell owner)\n                : base(Core.ML ? 10 : 12, true,", "answers": ["                if (m_Owner.SpellTarget == null)"], "all_classes": null, "length": 538}
{"pred": "       self.identity_map = self._identity_cls()\n        self._new = {}\n        self._deleted = {}\n\n    def __init__(self, bind=None, autoflush=True, autocommit=False,\n                 expire_on_commit=True,", "answers": ["        for state, dict_ in states.items():"], "all_classes": null, "length": 4268}
{"pred": "\t\tfor(IField field : fields) { \n\t\t\tString name = field.getField().getSignature();\n\t\t\tList<IField> named = name2Field.get(name);\n\t\t\tif (named==null) { \n\t\t\t\t", "answers": ["\t\tfor(IField field : fields) { "], "all_classes": null, "length": 1985}
{"pred": "       like r'/foo/*' in conjunction with using the decorator.\n    \"\"\"\n    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        if self.request.path.endswith(\"/\"):\n            if self", "answers": ["    like ``r'/foo/?'`` in conjunction with using the decorator."], "all_classes": null, "length": 6502}
{"pred": "\t\t\tbase.Render (writer);\n\t\t}\n\t\t\n\t\tprotected internal override void PreRender (HtmlTextWriter writer)\n\t\t{\n\t\t\tif (viewIndex == -1) {\n\t\t\t\tSetActiveView (null);\n\t\t\t}", "answers": ["\t\t\tif ((Controls.Count == 0) && (initialIndex != -1)) "], "all_classes": null, "length": 777}
{"pred": "dwn = WigleDownloader(user='my_user_name', password='my_password_key', outpath='/path/to/output/')\ndwn.run()\n\nTrying to run the script, but it is not working.\nPlease help me.\n\n", "answers": ["    args = parser.parse_args()"], "all_classes": null, "length": 1225}
{"pred": "               if (mod >= 160 && mod <= 165)\n                {\n                    if (i.SkillBonuses.GetBonus(1) > 0)\n                    {\n                    }\n                }\n                // SkillGroup3 replace Sk", "answers": ["                if (mod >= 156 && mod <= 160)"], "all_classes": null, "length": 1845}
{"pred": "   android_builds = android_builds(build, builds)\n    if not android_builds:\n        # No builds for this platform, return nothing\n        return None\n    else:\n        # Append the desktop builds to the list\n        for b in android_builds:\n", "answers": ["        for plat_os in ['Windows', 'Linux', 'Linux 64', 'OS X']:"], "all_classes": null, "length": 816}
{"pred": "\t\tstateBeansList = StatusBL.getByProjectIssueTypeAssignments(projectID, issueTypeID, objectID);\n\t\tif (stateBeansList==null||stateBeansList.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t", "answers": ["\t\tif (projectID==null || issueTypeID==null) {"], "all_classes": null, "length": 1101}
{"pred": "           foreach (ArgumentSyntax argument in argumentSyntaxs) {\n                if (argument.TypeNode.GetType().GetField( \"__CSharpPValue\", [] ) is CSharpPValuePTypePFieldPTypePFieldPFieldPFieldPFieldPFieldPFieldPFieldP", "answers": ["            foreach (ArgumentSyntax argumentSyntax in argumentSyntaxs) {"], "all_classes": null, "length": 861}
{"pred": "       split_test = self.get_item_from_modulesto\n        (usage_key, verify_is_draft=True) = self.split_test_usage_key\n        split_test = self.get_item_from_modulesto\n        split_test", "answers": ["        split_test = self._update_partition_id(0)"], "all_classes": null, "length": 2752}
{"pred": "           if (cff) {\n                // sivan; cff\n                if (cff) {\n                    // Generates the CIDFontTyte2 dictionary\n                    PdfIndirectReference fontDescriptor = piref;\n                    \n                    \n                    \n                    ", "answers": ["            foreach (object o in longTag.Values) {"], "all_classes": null, "length": 1490}
{"pred": "\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);\n\t\t\t\t\t\tcgn.x = xScale * (maxWidth + 0.5 * (cell.getCellGroup().getCellGroupName() + 0.5));\n\t\t\t", "answers": ["\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);"], "all_classes": null, "length": 1113}
{"pred": "       task = Util.listenablesAsync(new ListenableFutureTask<Bitmap>(callable));\n        }\n        }\n        public Bitmap loadPage() throws IOException {\n        InputStream inputStream = context.getResources().getAsStream(model.getSprite());\n        Bitmap bitmap =", "answers": ["        task = new ListenableFutureTask<>(callable);"], "all_classes": null, "length": 629}
{"pred": "           }\n        });\n    }\n}", "answers": ["                else if (ke.getKeyCode() == KeyEvent.VK_DOWN) {"], "all_classes": null, "length": 1035}
{"pred": "   # ...\nView.nested\n# ...\n\nNote:\nThe `NodeView` class is the base class for all Node related views, and it's responsible for setting up the necessary widgets and navigation links.\nThe `NodeAllView` class is a concrete view class that provides a pag", "answers": ["    prerequisite = NavigateToSibling('Details')"], "all_classes": null, "length": 534}
{"pred": "\t\tfor (IJRecognitionListener listener : recognitionListeners) {\n\t\t\tlistener.onRecognition(timestamp, sequences, sequenceTitles);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t", "answers": ["\t\tfor (IJRecognitionListener listener : recognitionListeners) {"], "all_classes": null, "length": 482}
{"pred": "           }\n            base.Render(writer);\n        }\n    }\n}\n\", CSharp, \"ClearCanvas.ImageServer.Web.Common.WebControls.UI.ToolbarButton\"))\n    public class ToolbarButton : ImageButton\n    {\n    }\n}\n```", "answers": ["                ScriptManager sm = ScriptManager.GetCurrent(Page);"], "all_classes": null, "length": 655}
{"pred": "\t\t}\n\t}\n\t\n\tpublic void onDispose()\n\t{\n\t\tinventory.dispose();\n\t\tsuper.onDispose();\n\t}\n\t\n\tpublic static TileSpikeTrap createTile(World world, BlockPos pos,", "answers": ["\t\tdamageCooldown = compound.getInteger(\"DamageCooldown\");"], "all_classes": null, "length": 475}
{"pred": "       return getSpecification().getId() + \"Effect(\" + probability + \");\";\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        StringBuilder sb = new StringBuilder(32);"], "all_classes": null, "length": 661}
{"pred": "   i = store.handle_indicators_create(t, {\n        'indicator': 'example.com',\n        'group': 'everyone',\n        'provider': 'example.com',\n        'tags': ['test'],\n        'itype': 'fqdn", "answers": ["    i = store.handle_indicators_create(t, {"], "all_classes": null, "length": 577}
{"pred": "if __name__ == 'mongoenginetest':\n    unittest.main()\n    # Connect to the mongoengine test database\n    connect('mongoenginetest')\n    # Create a new connection\n    get_db()\n    del delta_test\n    del test_circ", "answers": ["        p = Person.objects.get(name=\"owner\")"], "all_classes": null, "length": 701}
{"pred": "   display(widgets.Plot(figsize=(10, 10), size=(1000, 600), draps=True, display=display))\n    # ...\n    display(widgets.Line(x, y, line=['index'], color='red", "answers": ["                    interact(self._plot_line, x_name=widget_x, y_name=widget_y)"], "all_classes": null, "length": 1433}
{"pred": "if (toScan.Contains(path))\n{\n    // Ignore the change\n}\nelse\n{\n    // Add the path to the command queue\n    var command = new MediaFilesCommands.MediaFilesChangeCommand(rootFolder, path);\n    _commandQueueManager.Enqueue", "answers": ["                if (!ShouldIgnoreChange(path, ignored))"], "all_classes": null, "length": 513}
{"pred": "\t\treturn read(key, computed);\n\t}\n\t@Override\n\tpublic void set(K key, E value) {\n\t\tthrow UnsupportedOperationException(\"TransformingMap does not support set()\");\n\t }\n\t@Override\n\tpublic void setAll(Map<? extends", "answers": ["\t\treturn read(key, computed);"], "all_classes": null, "length": 837}
{"pred": "       resbrains = pdt.searchResults(query)\n        if len(resbrains) == 1:\n            contobj = resbrains[0].getObject()\n            if contobn.isDiscussable() and canreply(contobj):\n               ", "answers": ["        cat = getToolByName(self.context, 'uid_catalog')"], "all_classes": null, "length": 1519}
{"pred": "\t\t}\n\t}\n\tpublic struct TileList\n\t{\n\t\tpublic Tile[] Tiles;\n\t\tpublic int Index;\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\t\tset { m_ID = (ushort)value; }"], "all_classes": null, "length": 1528}
{"pred": "                   // get the parcel voice channel\n                    parcelVoiceInfo = GetVoiceChannel(avatar, land);\n                    channelUri = parcelVoiceInfo.channel_uri;\n                    m_log.DebugFormat(\"[FreeSwitchVoice][", "answers": ["                    channelUri = ChannelUri(scene, land);"], "all_classes": null, "length": 1661}
{"pred": "\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(IsNew)\n\t\t\t{\n\t\t\t\tPayments.Add(Payment.CreatePayment(PayPeriodCur,Payment.PaymentTypes.Pay_Stub_Full,Payment.Pay", "answers": ["\t\t\t\tMsgBox.Show(this,\"Please fix data entry errors first.\");"], "all_classes": null, "length": 576}
{"pred": "       lat, lon = _build_lat_lon_for_NAME_timeseries(column_headings)\n        # Convert av or Int time to timedeltas.\n        column_headings['Av or Int time'] = _calc_integration_time(\n            column_headings", "answers": ["        lat, lon = _build_lat_lon_for_NAME_timeseries(column_headings)"], "all_classes": null, "length": 2765}
{"pred": "   return authz.is_authorized('group_or_org_member_create', context, data_dict)\n\nNote: The above code is a modified version of the existing code, where the logic.auth_allow_anonymous_access tag is removed, as the code is not allowing anonymous", "answers": ["    group_id = data_dict['id']"], "all_classes": null, "length": 772}
{"pred": "\t\t\t\tint parentPartition = parentIndex >= 0 ? parentIndex : node.getPartitionId();\n\t\t\t\toutices[parentPartition] = parentIndex >= 0 ? parentIndex : node.getPartitionId();\n\t\t\t\tconfidences[parent", "answers": ["\t\t\t\tString label = example.getValueAsString(predictionAttribute);"], "all_classes": null, "length": 784}
{"pred": "       return new SearchResults[0];\n    }\n    }\n    #region TranslationUnit\n    public class TranslationUnit : ITranslationUnit\n    }\n    #endregion // TranslationUnit\n    #region ErrorCode\n    public enum ErrorCode\n    {\n    /// <", "answers": ["            var searchResultsArray = new SearchResults[segments.Length];"], "all_classes": null, "length": 1172}
{"pred": "         codePoint = codePoint << 2;\n          offset += 2;\n          ch = string.charAt(offset);\n          if (ch < 128) {\n             return _asciiSet[ch] ? offset : -1;\n          }\n          // ...\n", "answers": ["            char low = string.charAt(offset++);"], "all_classes": null, "length": 6474}
{"pred": "if (existingRequired) {\n    // If the study form name is null or empty, then the accession number is invalid\n    if (studyFormName == null || studyFormName.isEmpty()) {\n        return ValidationResults.REQUIRED_FAIL;\n    }\n", "answers": ["        if (GenericValidator.isBlankOrNull(studyFormName)) {"], "all_classes": null, "length": 945}
{"pred": "\t\t\t\t\tSendOrderTo(newConn, \"ServerError\", message);\n\t\t\t\t\tDropClient(newConn);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (handshake.Mod != ModData.Manifest", "answers": ["\t\t\t\t\tSendOrderTo(newConn, \"AuthenticationError\", message);"], "all_classes": null, "length": 807}
{"pred": "\t\tfor (0078157)\n\t\t{\n\t\t\tcoll.add(beans[--len]);\n\t\t}\n\t\treturn coll;\n\t}\n\tpublic static CatsReferralPendingEmergencyNonEDAdmissionListVoCollection", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 833}
{"pred": "   xbmc.executebuiltin(\"Reboot\")\n    xbmc.sleep(1000)\n    xbmc.executebuiltin(\"Reboot\")\n    xbmc.sleep(1000)\n    xbmc", "answers": ["elif prnum == 'advanced':"], "all_classes": null, "length": 549}
{"pred": "           int [] ret = new int[A.Dimensions.NumberOfDimensions]; \n            A.GetValueSeq(seqindex,ref ret); \n            return ret; \n        }\n        /// <summary>\n        /// convert sequential index into subscript indices\n        /// </", "answers": ["            int [] ret = new int[A.Dimensions.NumberOfDimensions]; "], "all_classes": null, "length": 1174}
{"pred": " if pinDates:\n    # Get the relevant plot\n    if grouping in AccountingplotsController.keys():\n      # Get the plot data\n      if not AccountingplotsController.getPlotListAndSelectionValues( grouping ):\n        return S_ERROR( \"Error getting plot data!\"", "answers": ["  reportName = pD[ 'plotName' ]"], "all_classes": null, "length": 1147}
{"pred": "\t\t}\n\t\tpublic class BaseBuilderQueueManager\n\t\t{\n\t\t\tpublic BaseBuilderQueueManager(BaseBuilderBotModuleInfo info, string queue, Player owner, PowerManager power, PlayerResources resources, IResourceLayer resourceLayer)\n\t\t\t{\n\t\t\t\t", "answers": ["\t\t\tforeach (var rp in world.ActorsWithTrait<RallyPoint>())"], "all_classes": null, "length": 985}
{"pred": "       return plan.plan();\n    }\n    public static String getJSON(String stmt) {\n        try {\n            JSONObject json = new JSONObject(stmt);\n            return json.toString();\n        }\n        catch (JSONException e) {\n            throw new IllegalArgument", "answers": ["        List<PlanNodeList> nodeLists = new ArrayList<PlanNodeList>();"], "all_classes": null, "length": 768}
{"pred": "\t\t\tthis.comboBox1.Size = new System.Drawing.Size(310, 200);\n\t\t\tthis.comboBox1.SizeMode = System.Windows.Forms.ComboBoxSizeMode.DropDownSize;\n\t\t\tthis.comboBox1.", "answers": ["\t\t\tthis.comboBox1.Size = new System.Drawing.Size(224, 21);"], "all_classes": null, "length": 1012}
{"pred": "\t\t\tdcb.Baud = (baud_rate / 1000) * 1000;\n\t\t\tdcb.Parity = parency.ParityType;\n\t\t\tdcb.Ack = hs.HandshakeType;\n", "answers": ["\t\t\tdcb.SetValues (baud_rate, parity, data_bits, bits, hs);"], "all_classes": null, "length": 1031}
{"pred": "       page = self.get_page(self.user.get_profile().get_url(),\n                             login_as=admin)\n        self.assertEquals(page.context['cobrand'],\n                          cobrand)\n        self.assertEquals(page.context['admin", "answers": ["        page = self.get_page(self.user.get_profile().get_url(),"], "all_classes": null, "length": 840}
{"pred": "   _keep_tempdir = parser.parse_args(sys.argv).keep_tempdir\n    TestMethods(os.path.join(temp.gettempdir(), 'test'))\n    main()\n\n    # Redirect the output to a file\n    old_stdout = sys.", "answers": ["    options, args = parser.parse_known_args()"], "all_classes": null, "length": 555}
{"pred": "\t\tself.list = List(self.newAPList)\n\t\tself.list.append(self.buildEntryComponent(essid, bssid, encrypted, iface, maxrate, signal))\n\t\tself.list.append(self.buildEntryComponent(essid,", "answers": ["\t\t\tcurrentListEntry = self[\"list\"].getCurrent()"], "all_classes": null, "length": 1024}
{"pred": "               float x = x * (float)n / (float)n + fontX;\n                float y = y * (float)n / (float)n + fontY;\n                return new Rectangle(x, y, n * (float)n / (float)n, n *", "answers": ["                int len = fCode.Length + 2;"], "all_classes": null, "length": 1163}
{"pred": "   return ArrayUtils.toPrimitive(results);\n\n}\n\n}\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.SortedSet;\nimport java", "answers": ["    if (results == null) {"], "all_classes": null, "length": 840}
{"pred": "       y_points = np.arange(-90, -185.23, 90)\n        sample_points = [\n            (\"longitude\", x_points),\n            (\"latitude\", y_points),\n        ]\n        result = traj_interpol", "answers": ["        y_points = np.arange(-89.12, +90.0, 42.847)"], "all_classes": null, "length": 819}
{"pred": "           Clipboard.Clear();\n            Clipboard.SetText(new PacketDump(currPacket.Frame, currPacket.Packet));\n            toolStripButtonCopy.Enabled = false;\n            toolStripButtonRevert.Enabled = false;\n            toolSt", "answers": ["            if (currPacket != null)"], "all_classes": null, "length": 518}
{"pred": "\nimport os\nimport numpy as np\nimport pickle\nimport pylab\nimport mfcc_diy\nimport echonest\nimport config\nimport songseg\nimport starts_point\nimport numpy as np\nimport os\nimport pickle\nimport pylab\nimport mf", "answers": ["    elif color == 'yellow':"], "all_classes": null, "length": 1319}
{"pred": "\npublic class RefCountedSet\n{\n    public RefCountedSet(IDictionary<TK, int> refSet, int numValues)\n    {\n        _refSet = refSet;\n        _numValues = numValues;\n    }\n}\n}", "answers": ["            set { _numValues = value; }"], "all_classes": null, "length": 743}
{"pred": "           this.SolidSolutionExplorer.TreeNodeSelect += new EventEventHandler(SolidSolutionExplorer_TreeNodeSelect);\n            this.SolidSolutionExplorer.TreeNodeDragStart += new EventEventHandler(SolidSolidExplorer_TreeNodeDragStart);\n", "answers": ["            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);"], "all_classes": null, "length": 1467}
{"pred": "           return wrapper.copyFunction(\n                self,\n                self.install( wrapper.get_namespace( self )),\n                original,\n                self.errorChecking( wrapper.get_error_error_handler() )\n            )\n        else:\n            raise AttributeError(\"copyBase", "answers": ["        elif hasattr( original, 'originalFunction' ):"], "all_classes": null, "length": 831}
{"pred": "           for (int i = 0; i < emptyStreams.size(); i++) {\n                if (emptyStreams.get(i)) {\n                    writeEmptyStream(baos, files.get(i));\n                }\n            }\n            header.write(baos.", "answers": ["            final DataOutputStream out = new DataOutputStream(baos);"], "all_classes": null, "length": 1652}
{"pred": "while (((System.currentTimeMillis() + rampDelay * 1000 * 1000) / (1000 * 1000 * 1000)) % (1000 * 1000 * 1000", "answers": ["                    for (int i = 0; i < ticker.length; i++)"], "all_classes": null, "length": 600}
{"pred": "           var item = Subject.GetItems().Single();\n            item.CanBeRemoved.Should().BeTrue();\n            item.CanMoveFiles.Should().BeTrue();\n        }\n        [Test]\n        public void should_be_removable_and_should_allow", "answers": ["            var item = Subject.GetItems().Single();"], "all_classes": null, "length": 655}
{"pred": "           }\n        }\n        private static async Task RecycleItemsRecycled(ISession session, CancellationToken cancellationToken)\n        {\n        }\n        public class ItemRecycledEvent\n    {\n        public ItemId ItemId { get; set };\n        public int Count", "answers": ["                if (_diff > 0)"], "all_classes": null, "length": 772}
{"pred": "\n    while RunNo < 3:\n        # Read the GALFIT input file\n        try:\n            ReadLog.ReadGALFIT(cutimage, whtimage, xcntr, ycntr, NYPTS, NYPTS, line_s, psff", "answers": ["                      'relative to data\\n'])"], "all_classes": null, "length": 1863}
{"pred": "   }\n    };\n    public static UBytePtr _write_mem(int offset, UByte data) {\n    }\n    public static void _write_w(int offset, UByte data) {\n    }\n    public static UByte _read_mem(int offset, int", "answers": ["                    i += ((b & 0x08) << 2);"], "all_classes": null, "length": 1309}
{"pred": "   def _install_course_updates(self):\n        \"\"\"\n        Install course updates.\n        \"\"\"\n    def _install_course_handouts(self):\n        \"\"\"\n        Install handons.\n        \"\"\"\n    def _install_course_textbooks(self):\n       ", "answers": ["        course_key = CourseKey.from_string(self._course_key)"], "all_classes": null, "length": 824}
{"pred": "\t\tif(splitNumber[0] != null && (splitNumber[0].equals(\"1\") || splitNumber[0.equals(\"2\")) {\n\t\t\tchance = (float)(splitNumber[1].split(\"\"))[0];\n\t\t}\n\t\treturn (int", "answers": ["\t\tint min = -1;"], "all_classes": null, "length": 803}
{"pred": "   if response.info['content'] == '{\"status\": \"ok\"}':\n        # Download both cert files from the api host\n        try:\n            cert_file = open('%s/%s.pem' % (config_directory, 'key'))\n            cert_file.close", "answers": ["        types = ['cert', 'key']"], "all_classes": null, "length": 744}
{"pred": "           this.lblPrivacy.AutoSize = true;\n            this.lblPrivacy.DataBindings = (System.Windows.Forms.BindingList<System.Object>.BindingListMode)(System.Windows.Forms.BindingListBoxState.Add);\n            this.lblPriv", "answers": ["            this.lblPrivacy.Location = new System.Drawing.Point(6, 26);"], "all_classes": null, "length": 1336}
{"pred": "   if self.loaded_plugins:\n        plugruncount = sum(plugin.run() for plugin in self.loaded_plugins)\n        self.ui_log.info(\"\")\n        self.ui_log.info(\" Runs: %d\" % plugruncount", "answers": ["        for i in zip(self.loaded_plugins):"], "all_classes": null, "length": 3043}
{"pred": "IFossil(IConferenceFossil).getAllMaterialList()\n# ...\nIFossil(ILocalFileFossil).getAllMaterialList()\n# ...\nIFossil(ILocalFileInfoFossil).getAllMaterialList()\n# ...\nIFossil", "answers": ["    getRoomFullName.produce = lambda s: s.getRoom()"], "all_classes": null, "length": 893}
{"pred": "throw new MessageWriterException(e);\n}\n                };\n                messageBrowser.setMessageWriter(messageWriter);\n                parent.mirthClient.connect();\n                parent.mirthClient.disconnect();\n            } else {\n                try {\n                    MessageImporter importer =", "answers": ["                            throw new MessageWriterException(e);"], "all_classes": null, "length": 543}
{"pred": "\t\t       \t\t\tlayer =((Scriptable)value).getLayer();\n\t\t       \t\t} else {\n\t\t       \t\t\tlayer = Integer.parseInt(value.toString());\n\t\t       \t\t}\n\t\t    \t}\n\t\t    \treturn layer;", "answers": ["\t\t       \t\t\tlayer = ScriptRuntime.toInt32(value);"], "all_classes": null, "length": 762}
{"pred": "   if (currentSession != null && !currentSession.equals(Session.getDefaultAuthorizedAccountState())) {\n        userInfoSession = currentSession;\n        // Load the user's profile picture and name\n        GraphAPI graphAPI = new GraphAPI(currentSession);\n        request = graph", "answers": ["        if (currentSession != null && currentSession.isOpened()) {"], "all_classes": null, "length": 1328}
{"pred": "\t\tfor (Emotion emotion : emotions)\n\t\t\tsum += emotion.strength;\n\t\taverage = (float)(sum / (int)(emotions.length * 1.00000000000000000", "answers": ["\t\tfor(Emotion emotion : emotions)"], "all_classes": null, "length": 630}
{"pred": "   def test_xml_comparison(xml_comparison):\n        # ...\n        self.assertxmlComparison(xml_comparison, et.toxml(self.build.to_xml()))\n        # ...\n    def test_xml_comparison_with_properties(xml", "answers": ["                    'property1': 2, 'property2': 3}"], "all_classes": null, "length": 1160}
{"pred": "   Lat = phi1Rad*_deg2rad\n    Long = LongOrigin + (x-10000000.0)*cos(phi1Rad*_rad2deg/1000000000)\n\n    # if the Latitude is", "answers": ["    N1 = a/sqrt(1-eccSquared*sin(phi1Rad)*sin(phi1Rad))"], "all_classes": null, "length": 980}
{"pred": "       if captcha.check(request.POST['recaptcha_challenge_field'], request.POST['recaptcha_response_field'], settings.RECAPTCHA_PUBLIC_KEY):\n            messages.error(request, \"Captcha was incorrect!\") #%", "answers": ["        form = ReportUserForm(request.POST)"], "all_classes": null, "length": 651}
{"pred": "   get_buglisting_search_filter_url = get.get_buglisting_search_filter_url\n    exposemultiple = exposemultiple.ExposeMultiple\n    get_product_review_license_url = get.get_product_review", "answers": ["    field_names = ['name', 'summary', 'branch', 'releasefileglob']"], "all_classes": null, "length": 4413}
{"pred": "\t\t\t\tform.LayoutControl(form, ControlState.Initial);\n\t\t\t\tform.Paint += new PaintEventHandler(form_Paint);\n\t\t\t\tform.ControlChanged += new ControlChangedEventHandler(form_ControlChanged);\n\t\t\t\tform.Res", "answers": ["\t\t\t\ttry { RtlApplyToControls(form.Controls); }"], "all_classes": null, "length": 511}
{"pred": "           }\n            temp >>= MINIMUM_NO_OF_DIGITS;\n            }\n            return arr;\n        }\n    }\n    public String toString(String format)\n    {\n        if (format == null)\n        {\n            throw new Null", "answers": ["                temp >>= 8;"], "all_classes": null, "length": 917}
{"pred": "   return pos.compile(regex, flags)\n    def run_compile_tag_regex(positional_tags):\n        return pos.compile(regex, flags)\n    def run_test_threads(test_threads):\n        return test_threads[0]\n    def run_", "answers": ["                if flag == 'exclude_tags':"], "all_classes": null, "length": 1382}
{"pred": "           return new object[0];\n        }\n        }\n    }\n}\n}\nPlease write the code for the above given code.\n\nNote: Please note that the above code is a sample code and you may not be able to use it directly in your project.\n\nI have no", "answers": ["                return new object[0];"], "all_classes": null, "length": 545}
{"pred": "\nfor p in obd_packets:\n    if p.name in obd_supported_pids:\n        print(p.name)\n        # ... process the packet\n        # ... or save it to a file\n        # ... or whatever you want to do\n\nNote:", "answers": ["        0x06: 'EOBD (Europe) ',"], "all_classes": null, "length": 557}
{"pred": "\nimport unittest\n\nunittest.test_support.run_unittest()\n\nIf you run the script with the following command:\n\npython test.py -v --dbus-host 192.164.0.108 --dbus-service-name", "answers": ["\t\tloop = gobject.MainLoop()"], "all_classes": null, "length": 1595}
{"pred": "           }\n            else\n            {\n\t\t\t\tindex = this.AddCraft(typeof(EnchantedSwitch), 1044294, 1072893, 45.0, 95.0, typeof(BlankScroll),", "answers": ["                this.AddRes(index, typeof(BlackPearl), 1044353, 1, 1044253);"], "all_classes": null, "length": 1615}
{"pred": "       if exc is None:\n            exc = sys.exc_info()[1)\n        rv = _request_ctx_stack.pop()\n        assert rv is self, 'Popped wrong request context.  (%r instead of %r)' \\\n            % (rv", "answers": ["        app_ctx = self._implicit_app_ctx_stack.pop()"], "all_classes": null, "length": 1358}
{"pred": "   response = _pubsub_consumer(session, cluster_id, needs_columns=needs_columns)\n    if topic_name:\n        response = response.filter(PubSubTopic.name==topic_name)\n    return response\n# ###################################################################################################", "answers": ["    response = _pubsub_consumer(session, cluster_id, query_wrapper)"], "all_classes": null, "length": 2251}
{"pred": "           if (resourceEntityForRelease != null) {\n                result.add(resourceEntityForRelease);\n            }\n            // ...\n        }\n        return result;\n    }\n}\n */\n}\n```\nThe `ResourceDependencyResolverService` is a service that resolves dependencies", "answers": ["            if (resourceEntityForRelease != null) {"], "all_classes": null, "length": 1149}
{"pred": "   axis_proj = _axis_in_detector(ray_trafo.geometry)\n    rot_dir = _rotation_direction_in_detector(ray_trafo.geometry)\n    dx = rot_dir[0] * angles[1] + rot_dir[", "answers": ["        dx = ray_trafo.range.meshgrid[1]"], "all_classes": null, "length": 1057}
{"pred": "   helpers.getURL(self.proxy_buildURL(url), post_data=post_data, params=params, headers=headers, timeout=timeout,\n                  session=self.session, json=json)\n\nI'm trying to understand what the code is trying to do", "answers": ["            logger.log(u\"Proxified REGEX: \" + regx, logger.DEBUG)"], "all_classes": null, "length": 1751}
{"pred": "\t\t\tswitch (type) {\n\t\t\t\tcase FontSize.Smaller:\n\t\t\t\t\treturn \"smaller\";\n\t\t\t\tcase FontSize.Larger:\n\t\t\t\t\treturn \"larger\";\n\t\t\t\tcase FontSize.XX", "answers": ["\t\t\tif (type == FontSize.NotSet)"], "all_classes": null, "length": 726}
{"pred": "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "answers": ["\t\t\t\t\t\t|| (block2.Length > GetInputBlockSize()))"], "all_classes": null, "length": 924}
{"pred": "\t\t\t\tAssert.That(obj.Properties[0].Value.Properties[0.Key, ValueType.String], Is.EqualTo(\"The outermost value\"));\n\t\t\t\tAssert.That(obj.Properties[0].Value.Properties[1.Key, ValueType.String", "answers": ["\t\t\tobj = (JObject)obj.Properties[0].Value;"], "all_classes": null, "length": 537}
{"pred": "               for (int w = 0; w < width; w++) {\n                    T2 edge = T2(w, h);\n                    edges.add(edge);\n                }\n            }\n            return edges;\n        }\n        @Override\n        public Collection<String>", "answers": ["                for (int w = 0; w < width; w++) {"], "all_classes": null, "length": 1282}
{"pred": "   iso = iso.Isoelastics(ds)\n    iso.get(col1=\"deform\", col2=\"deform_circ\")\n    assert np.allclose(iso.get(col1=\"deform\", col2=\"deform_circ\")[0", "answers": ["    i1 = iso.get_default()"], "all_classes": null, "length": 761}
{"pred": "\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        if (args.length < 2 || args.length > 3) {"], "all_classes": null, "length": 1331}
{"pred": "if __name__ == '__main__':\n    sys.exit(self.test_check_for_alert_empty_history_and_subscriptions(alert.check_for_alert(history, subscription)))\n\nI have a question about the code, I am not sure if the", "answers": ["                    {u'Timestamp': datetime.datetime(2015, 12, 31, 21, 29, 47,"], "all_classes": null, "length": 706}
{"pred": "\t\t}\n\t\tif (downloadFiles(files)) {\n\t\t\ttry {\n\t\t\t\tperformInstallation();\n\t\t\t\treturn true;\n\t\t\t} catch (Exception ex) {\n\t\t\t}\n\t\t}\n\t\treturn false;\n", "answers": ["\t\t\tString downloadedJarFile = performDownload();"], "all_classes": null, "length": 519}
{"pred": "\t\t\twindow.Dispose();\n\t\t\tcontext = IntPtr.Null;\n\t\t\tSDL.SDL_Free(context);\n\t\t\twindow.Window = IntPtr.Null;\n\t\t\tSDL.SDL_DestroyWindow(window.Window);", "answers": ["\t\t\tif (context != IntPtr.Zero)"], "all_classes": null, "length": 469}
{"pred": "       projected onto the *y* axis).\n        :rtype: numpy.ndarray or None\n        \"\"\"\n        return self._project_cov_mat_inverse(\n            self.x_data_cov_mat_inverse, self.y_data_cov_mat_", "answers": ["        projected onto the *y* axis. :py:obj:`None` if singular."], "all_classes": null, "length": 985}
{"pred": "       return new CmsLink(m_structureId, m_target, m_query, m_anchor, m_type, m_internal);\n    }\n    // additional code to handle the toString() representation\n    public String toToStringRepr() {\n        return ReflectionToStringBuilder", "answers": ["        if (this == EMPTY) {"], "all_classes": null, "length": 703}
{"pred": " } catch Exception e) {\n    // Ignored\n    Exceptions.toUndeclared(\"Failed to retrieve the owning account for object \" + walrusObject.getObjectKey() + \" in bucket \"\n        + walrusObject.getBucketName(), e);\n   ", "answers": ["                  adminUser = getEucalyptusAdmin();"], "all_classes": null, "length": 4345}
{"pred": "           add { _selectionChanged += value; }\n            remove { _selectionChanged -= value; }\n        }\n        private void SelectionChanged(Object sender, EventArgs e)\n        {\n            if (IsInitialized)\n                UpdateFolderTree();\n            SelectionChangedEventHandler(sender, e", "answers": ["            add { _selectedFolderChanged += value; }"], "all_classes": null, "length": 666}
{"pred": "\n        ImportVmTemplateCommand command =\n            spy(new ImportVmTemplateCommand(\n                createParameters() {\n                    @Override\n                    public VDSGroup getVdsGroup() {\n                        return spy(new VDSGroup());\n                }\n            });\n", "answers": ["        ImportVmTemplateParameters parameters = createParameters();"], "all_classes": null, "length": 616}
{"pred": "\t\t\tw10.XAttach = (uint)(1);\n\t\t\tw10.YAttach = (uint)(1);\n\t\t\tw10.XOptions = (global::Gtk.AttachOptions)(4);\n\t\t\tw10.", "answers": ["\t\t\tw10.TopAttach = ((uint)(1));"], "all_classes": null, "length": 650}
{"pred": "       if self.validate():\n            # ...\n            # ...\n            # ...\n            return True\n        else:\n            return False\n        # ...\n        # ...\n        # ...\n        # ...\n        # ...\n        # ...\n        # ...\n        # ...\n       ", "answers": ["            environ['%sCATEGORY' % POSTPROC_ENVIRO_ID] = \\"], "all_classes": null, "length": 1764}
{"pred": "\t\t\tILGenerator ilgen = mb.GetILGenerator();\n\t\t\tilgen.Emit(OpCodes.Ldloc_0);\n\t\t\tilgen.Emit(OpCodes.Call, BaseType.GetConstructor(BindingFlags.Instance | BindingFlags", "answers": ["\t\t\treturn new ConstructorBuilder(mb);"], "all_classes": null, "length": 910}
{"pred": " return new Builder(prototype);\n}\n  public SendInvitationRequest(Builder builder) \n  {\n  }\n  public SendInvitationRequest DefaultInstance {\n  return DefaultInstance;\n  }\n  public static void AddInitialized(global::bnet.protocol.channel", "answers": ["      return (Builder) new Builder().MergeFrom(prototype);"], "all_classes": null, "length": 1897}
{"pred": "               vertices[x] = getVert(i, x);\n            }\n        }\n    }\n    public Vector3f getVert(int i, int vert) {\n        if (i < getQuadCount()) {\n            return quads[vert * getQuadCount() /", "answers": ["                    vertices[x] = new Vector3f();"], "all_classes": null, "length": 1059}
{"pred": "       if (showDateData != null) {\n            ignoredCols = showDateData;\n            // ignore date modified and date last modified\n            ignoredCols = CmsStringUtil.splitAsList(ignoredCols, ',');\n            for (int i = 0; i <", "answers": ["        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(showDateData)) {"], "all_classes": null, "length": 1920}
{"pred": "\t\t\tStartCoroutine (Wait (delayTime));\n\t\t}\n\t\tvoid Wait (float delayTime)\n\t\t{\n\t\t\tFrameWait (delayTime);\n\t\t}\n\t\tvoid FrameWait (float delayTime)\n\t\t{\n\t\t\t", "answers": ["\t\t\tyield return new WaitForEndOfFrame();"], "all_classes": null, "length": 583}
{"pred": "       Height = GetBestHeight();\n    }\n    }\n    //--------------------------------------------------------------------------------\n    // Override the OnLostControlEvent to ensure that the button is invalidated\n    protected override void OnLostControlEvent(ControlChangingEventArgs e)\n    {\n        Invalidate", "answers": ["        int h = GetBestHeight();"], "all_classes": null, "length": 638}
{"pred": "                   lastUser = r[\"CreatedBy\"].ToString();\n                }\n                if (lastUser.ToLower() != string.Empty)\n                    Users.Add(lastUser);\n            }\n            if (Users.Count > 0)\n            {\n                SendEmailForUser(", "answers": ["                    lastUser = r[\"CreatedBy\"].ToString();"], "all_classes": null, "length": 864}
{"pred": "\t\t\t\tdirections |= ScrollDirection.Right;\n\t\t\t\tif (Viewport.LastMousePos.Y >= Game.Renderer.Resolution.Height - EdgeCornerScrollThreshold)\n\t\t\t\t\tdirections |= ScrollDirection.Down;\n\t\t\t", "answers": ["\t\t\t\tdirections |= ScrollDirection.Right;"], "all_classes": null, "length": 598}
{"pred": "           }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n           ", "answers": ["            string[] CriteriaCodesUsedArray = CriteriaCodesUsed.ToArray();"], "all_classes": null, "length": 1562}
{"pred": "stream.Read (buffer, 0, buffer.Length);\n                // Adding file content as blob/byte[]\n                args.Add (filename, buffer);\n            }\n        }\n        public static void p5_io_file_load_ (ApplicationContext context, Node args, string full", "answers": ["                stream.Read (buffer, 0, buffer.Length);"], "all_classes": null, "length": 722}
{"pred": "   def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.empty = False\n        self.apply_callback = None\n        self.reqs = {}\n        for req_type in PayloadRequirementType:", "answers": ["        return not any(self._reqs.values())"], "all_classes": null, "length": 879}
{"pred": "\t\t\tget { return Enabled && _customRange != null; }\n\t\t}\n\t\tpublic string CustomRange\n\t\t{\n\t\t\tget { return _customRange; }\n\t\t\tset\n\t\t\t{\n\t\t\t\tif (value == _custom", "answers": ["\t\t\tget { return Enabled && _numberOfImages > 2; }"], "all_classes": null, "length": 1205}
{"pred": "\t\t\treturn dataDir;\n\t\t}\n\t\tpublic string ConfDirectory {\nNext line of code:\n\t\t\treturn confDir;\n\t\t}\n\t\tpublic string CacheDirectory {\nNext line of code:\n\t\t\treturn cacheDir;\n\t\t}\n", "answers": ["\t\t\tget { return dataDir; }"], "all_classes": null, "length": 614}
{"pred": "checkBugAnnotation(bugAnnotation);\n}\n}\n\n    private void checkBugAnnotation(BugAnnotation bugAnnotation) {\nthrow IllegalArgumentException(\"bug annotation not valid\");\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            if (bugAnnotation instanceof PackageMemberAnnotation) {"], "all_classes": null, "length": 733}
{"pred": "\tpublic override void OnDeath( Dunable d )\n\t{\n\t\t// Play a sound and transfer the food to the ground\n\t\tif ( d.HitHome )\n\t\t\td.DroppedFood = this; // Add the food to the ground\n\t\t", "answers": ["\t[TypeAlias( \"Server.Items.Pizza\" )]"], "all_classes": null, "length": 1914}
{"pred": "eFarm.X = Me.Position.X + (Me.Width * 100);\neFarm.Y = Me.Position.Y + (Me.Height * 100);\neFarm.X = Me.Position.X + (Me.Width * ", "answers": ["                        if (eFarm.MinionsHit >= Menu.GetSlider(\"LaneClearECount\"))"], "all_classes": null, "length": 993}
{"pred": "\t}\n}\n*/\nimport java.awt.GridBagConstraints;\nimport java.awt.Insets;\n\npublic class GBC {\n\n\tpublic static void main(String[] args) {\n\t\t// Create a GridBagConstraints object\n\t\tGridBagConstraints gbc =", "answers": ["\t\treturn get(x, y, width, height, 0.0, 0.0, DEFAULT_FILL, anchor);"], "all_classes": null, "length": 691}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        filexml = self._retr_file(filename)"], "all_classes": null, "length": 709}
{"pred": "       self.assertEquals(field_model_def.producer, field_def.producer)\n        self.assertEquals(field_model_def.rules, field_def.rules)\n        self.assertEquals(field_model_def.name, field_def.name)", "answers": ["        value = {'a': 'Awesome title', 'b': 'sub title', 'k': 'form'}"], "all_classes": null, "length": 559}
{"pred": "               new[] {new object[] {\"E1\", 10L, \">E1<\", \"?E1?\"}});\n                env.UndeployAll();\n            }\n        }\n        internal class InfraMultipleColumnMultipleIndex : RegressionExecution\n        {\n", "answers": ["                    new[] {new object[] {10L, \"E1\"}});"], "all_classes": null, "length": 2245}
{"pred": "\n    def __rdiv__(self, other):\n        try:\n            other = float(other)\n        except:\n            return NotImplemented \n        c = self.copy()\n        return c.__iright(other)\n    \n    def __iright__(self,", "answers": ["        c = self.copy()"], "all_classes": null, "length": 2793}
{"pred": "   # ... other code ...\n\nQuestion 1: What is the purpose of the `views` module and how does it relate to the `ir.ui.view` class?\n\nAnswer 1: The `views` module is a module that provides a set of views for the Openerp web", "answers": ["        view = self.browse(cr, SUPERUSER_ID, res_id, context=context)"], "all_classes": null, "length": 739}
{"pred": "value = createHTMLView(c, text);\nc.setClientProperty(BasicHTML.propertyKey, value);\nc.removeClientProperty(htmlDisable);\n}\nif (oldValue != null) {\n    oldValue.setView(null);\n}\n}\npublic static", "answers": ["            value = BasicHTML.createHTMLView(c, text);"], "all_classes": null, "length": 980}
{"pred": "   s = create(filename, contents=content)\n    assert s.name_is_testharness\n    item_type, items = s.manifest_items()\n    assert item_type == \"testharness\"\n    expected_urls = [\n        filename,\n    ]\n", "answers": ["    s = create(filename, content)"], "all_classes": null, "length": 633}
{"pred": "\t\t\t}\n\t\t\tvar hbmLoader = new HbmLoader(namedQueryReference);\n\t\t\tvar loader = new EntityLoader(hbmLoader);\n\t\t\tmapping.loader = loader;\n\t\t\tif (loader != null)\n\t\t\t{\n\t", "answers": ["\t\t\t\tmapping.loader = new HbmLoader();"], "all_classes": null, "length": 620}
{"pred": "\t\t\tint memberCount = m_Members.Count;\n\t\t\twriter.WriteEncodedInt( memberCount );\n\t\t\tfor ( int i = 0; i < memberCount; ++i )\n\t\t\t{\n\t\t\t\tPlayerState pl = m_", "answers": ["\t\t\twriter.WriteEncodedInt( (int) m_Members.Count );"], "all_classes": null, "length": 670}
{"pred": "   }\n    private void moveForward() {\n        assert invocationQueue.peekFirst() != null;\n        assert graphQueue.peek() != null;\n        assert graphQueue.size() > 0;\n        try {\n        }\n        catch (BailoutException", "answers": ["        assert graphQueue.size() <= maxGraphs;"], "all_classes": null, "length": 2259}
{"pred": "   def get_pr_metadata(self, ...):\n    def get_sprouts(self, ...):\n    def create_log_file(self, ...):\n    def create_log_depot(self, ...):\n    def create_pip_wheel(self, ...", "answers": ["                self.args['pytest'] = \"py.test {}\".format(pytest)"], "all_classes": null, "length": 951}
{"pred": "if (phi) {\n    // Create a new Phi node\n    PhiNode phi = getCachedPhi(value, Stamp.Common(value));\n    // Add the Phi node to the graph\n    effects.addFloatingNode(phi, \"readCacheProxy\");", "answers": ["                if (phi) {"], "all_classes": null, "length": 810}
{"pred": "if (mCallback != null) {\ntry {\nmCallback.handleCallSessionEvent(event);\n} catch (RemoteException ignored) {\n}\n}\n}\n}\n\nPlease help me to complete the code. I have attached a sample code also.\nPlease check the code and help", "answers": ["        if (mCallback != null) {"], "all_classes": null, "length": 587}
{"pred": "\t\t\t}\n\t\t}\n\t\tpublic override void Serialize(GenericWriter writer)\n\t\t{\n\t\t\tbase.Serialize(writer);\n\t\t\twriter.Write(0);\n\t\t}\n\t\tpublic override void Deserialize(GenericReader reader)", "answers": ["\t\t\t\tGump g = new Gump(0, 0);"], "all_classes": null, "length": 854}
{"pred": "   'BibxxxMixin',\n    'BibrecBibxxxMixin',\n    'Bibxxx',\n    'BibrecBixx',\n    'BibrecBixxMixin',\n    'BibrecBixxModel'\n", "answers": ["] + models)"], "all_classes": null, "length": 609}
{"pred": "   def remove_user_sessions(self, username, domain):\nNot implemented in DummyBackend.\n    def remove_user_email(self, username, domain):\nNot implemented in DummyBacklight.\n    def remove_user_password(self, username, domain):\n", "answers": ["        user = '%s@%s' % (username, domain)"], "all_classes": null, "length": 744}
{"pred": "         - *fpath*: string, full or relative path to the file.\n        \"\"\"\n        self.save_as_pofile(fpath)\n    def append(self, entry):\n        \"\"\"\n        Append a new entry to the MOFile.\n        **Keyword argument", "answers": ["          - *fpath*: string, full or relative path to the file."], "all_classes": null, "length": 2528}
{"pred": "   if not res['OK']:\n      gLogger.error( \"Failed to determine waiting problematics for transformation\", res['Message'] )\n      return res\n    else:\n      self.transClient.setTransformationStatus( transID, 'WaitingIntegrity' )\n      g", "answers": ["    if not res['OK']:"], "all_classes": null, "length": 873}
{"pred": "\t\t\tif(strippedBaseURI.getScheme() != null && noRelative)\n\t\t\t\turi = strippedBaseURI.relativize(uri);\n\t\t\tif(logMINOR) Logger.minor(this, \"Processing form action: \"+uri", "answers": ["\t\t\tString path = uri.getPath();"], "all_classes": null, "length": 1604}
{"pred": "       gsp = yield self.setupGerritStatusPush(summaryCB=sampleSummaryCB)\n        yield run_fake_single_build(gsp, buildResults, finalResult, resultText,\n                                   verifiedScore)\n        gsp.sendCodeReview.assert_", "answers": ["        gsp = yield self.setupGerritStatusPush(reviewCB=sampleReviewCB,"], "all_classes": null, "length": 958}
{"pred": "   self.category = atom.Category()\n  def testCategoryToAndFromString(self):\n    self.category.name = 'Google'\n    self.assert_(self.category.name == 'Google')\n    new_category = atom.CategoryFromString(self.category.ToString", "answers": ["    self.category = atom.Category()"], "all_classes": null, "length": 629}
{"pred": "           Map<String, AnnotationMirror> r2) {\n            return r1;\n            // ... or reduce to a place holder\n            // ... or resolve to a wildcard type\n            // ... or nothing\n            }\n        }\n    }\n    private AnnotationMir", "answers": ["                Map<String, AnnotationMirror> r2) {"], "all_classes": null, "length": 2339}
{"pred": "```\n    MATERIAL_MT_sss_presets.draw(context)\n    MATERIAL_MT_specials.draw(context)\n    MATERIAL_UL_matslots.draw(context, ob)\n    MATERIAL_", "answers": ["        col = split.column()"], "all_classes": null, "length": 2052}
{"pred": "           }\n            //MAPPER 16\n            if (_engine.Memory.Map.Cartridge.MapperNo == 16)\n            {\n                var map16 = (Mapper16) _engine.Memory.Map.CurrentMapper;\n                mapper16_prg", "answers": ["            if (_engine.Memory.Map.Cartridge.MapperNo == 16)"], "all_classes": null, "length": 1369}
{"pred": "           jMnuRoot.add(getOpenDocumentMenuItem(SOPEN_TDOC_URL));\n            jMnuRoot.add(getOpenDocumentMenuItem(SOPEN_TDOC_URL_WITH_SELECTED_BOOKMARCH));\n            jMnuRoot.", "answers": ["            String[] sTDocUrls = m_oInspector.getTDocUrls();"], "all_classes": null, "length": 594}
{"pred": "\t\tAdd(\"Party Quest\", 70030); // Party Quest Scroll [10 Red Bears]\n\t\tAdd(\"Party Quest\", 70035); // Party Quest Scroll [10 Red Bears]\n\t\tAdd(\"Party", "answers": ["\t\tAdd(\"Party Quest\", 70025); // Party Quest Scroll [30 Red Bears]"], "all_classes": null, "length": 1340}
{"pred": "\t\t\treturn Frame.H;\n\t\t}\n\t\tpublic override void LayoutSubviews ()\n\t\t{\n\t\t\ttry {\n\t\t\t\tbase.LayoutSubviews ();\n\t\t\t} catch {\n\t\t\t\tConsole.WriteLine (\"!!!! Caught exception", "answers": ["\t\t\tMeasure (0, 0);"], "all_classes": null, "length": 853}
{"pred": "       return self.announcement.title\n        # Or maybe you want to use the tweet ID as the identifier?\n        # return self.tweet_id\n        # Or maybe you want to use the creation date as the identifier?\n        # return self.pub_date\n        #", "answers": ["        return '%s -> %s' % (self.announcement, self.tweet_id)"], "all_classes": null, "length": 846}
{"pred": "\nimport sphinx.ext.todo as todo\ntodo.add_todo_to_doc('doc', 'definition', 'optional')\n\nPlease complete the code given below.\n\nimport sphinx.ext.todo as todo\ntodo.add_todo_", "answers": ["lexers['php'] = PhpLexer(startinline=True)"], "all_classes": null, "length": 1773}
{"pred": "   time_return = time_add(stime, etime)\n    print \"Time return is: \", time_return\n    #insert into flight_duration (sdate, stime, edate, etime, duration, src_callsign, groupID)\n    cursor.execute", "answers": ["                 ORDER BY sdate, stime ''', (i,))"], "all_classes": null, "length": 1259}
{"pred": "   if is_plugin_loaded():\n        # Install zfs, sshfs, and bindfs\n        install_zfs()\n        install_sshfs()\n        install_bindfs()\n        # Update zpool active log\n        update_zpool_active_log()\n        #", "answers": ["        last_snapshot = timestamp_to_rethinkdb(timestamp)"], "all_classes": null, "length": 896}
{"pred": "\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tswitch (keyword)\n\t\t\t\t{\n\t\t\t\t\tcase \"complicity\":\n\t\t\t\t\t\tswitch (rand.Rnd.Rnd(1000000", "answers": ["\t\t\t\tMsg(\"Welcome to the real world...\");"], "all_classes": null, "length": 1740}
{"pred": "\t\tname\t- aname/ename/gname\n\t\tvalue\t- vote value\n\t\t\"\"\"\n        Response.__init__(self, cmd, restag, rescode, resstr, datalines)\n        self.codestr = 'VOTE_REVOKED", "answers": ["\t\tname\t- aname/ename/gname"], "all_classes": null, "length": 2041}
{"pred": "   class HostData:\n        \"\"\"\n        Data about a single host.\n        \"\"\"\n        def __init__(self, uuid, name, status, result):\n        self.uuid = uuid\n        self.name = name\n        self.status = status\n        self.result =", "answers": ["        self.start = time.time()"], "all_classes": null, "length": 793}
{"pred": "\n                onFinish();\n            }\n        }\n    }\n    private void onOnlineConnectivity() {\n        // If we're in the background, we're not allowed to access the internet.\n        if (ConnectivityManager.getNetworkConnectivity(getApplicationContext())", "answers": ["                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(uri));"], "all_classes": null, "length": 690}
{"pred": "   if (len(primary.keys()) > 0):\n        print(\"primary.xml contains packages:\")\n        for key in primary.keys():\n            pkg = primary.items[key]\n            print(\"  - \" + build_nevra(pkg.name, pkg", "answers": ["    if (len(primary.keys()) > 0):"], "all_classes": null, "length": 918}
{"pred": "       inputs.extend(self.get_finalized_command('build_ext').get_outputs())\n        # inputs.extend(self.get_finalized_command('build_ext').get_outputs())\n        # ... (more code) ...\n\nI need help with the", "answers": ["            build_ext = self.get_finalized_command('build_ext')"], "all_classes": null, "length": 791}
{"pred": "\t\t\tfor (int j = 0; j < lazyPropertyNames.Length; j++)\n\t\t\t{\n\t\t\t\tobject propValue = lazyPropertyTypes[j].NullSafeGet(disassembledValues, lazyPropertyColumnAliases[j], session, entity", "answers": ["\t\t\tfor (int j = 0; j < lazyPropertyNames.Length; j++)"], "all_classes": null, "length": 3626}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        '-l', 'h_vmem=%dM' % request['job_max_vmem'],"], "all_classes": null, "length": 1274}
{"pred": "           return View(\"Form\", new DelegateViewModel());\n        }\n        // Add a relationship (EventDelegate) between Event (parent) Delegate (child)\n        [HttpPost]\n        [RolesRequired(\"Admin\",\"SaveEventDelegate\")]  \n        public ActionResult SaveEventDelegate(Delegate", "answers": ["            return View(\"Form\", new DelegateViewModel());"], "all_classes": null, "length": 1017}
{"pred": "                   var circle = (Circle) obj,\n                    ...\n                    }\n                    }\n                    throw new Exception(\"Invalid value\");\n                }\n                throw Exception();\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex);\n           ", "answers": ["                        var circle = (Circle) obj;"], "all_classes": null, "length": 668}
{"pred": "   def resetAccount(self):\n        self.account.setAccountData(self.user, {'password': None})\n        self.account.setAccountData(self.user, {'username': None})\n        self.account.setAccountData(self.user, {'account': None})", "answers": ["                elif res['error_code'] in [\"606\", \"607\", \"608\"]:"], "all_classes": null, "length": 545}
{"pred": "\t\t\tif (path.IsNone)\n\t\t\t\treturn null;\n\t\t\t// If the search path is empty, give up and search from backup position.\n\t\t\tif (path.Length == 0)\n\t\t\t{\n\t\t\t\tharv.", "answers": ["\t\t\tif (path.Count > 0)"], "all_classes": null, "length": 747}
{"pred": "```\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                       self.logger.error(\"%s failed\" % service_name)"], "all_classes": null, "length": 750}
{"pred": "       return Event.Builder();\n    }\n    protected abstract void sendEvent(Event e);\n}\n\nI have a problem with the flusher part of the code. I want to clear the event buffer when the repeateReduection is disabled. But the flusher is not cancelled when the", "answers": ["        long t = getMissionTime();"], "all_classes": null, "length": 575}
{"pred": "NoLoop:\n            if (context.NumberStatistics != 0)\n            {\n                states[stateIndex++] = context.Statistics;\n            }\n            else\n            {\n                states[stateIndex++] = context.FirstState;\n            }\n            if (state", "answers": ["            if (state != PpmState.ZERO)"], "all_classes": null, "length": 2203}
{"pred": "           return new DicomAttributeSL(tag, bb);\n            });\n        /// <summary>\n        /// The Signed Integer VR.\n        /// </summary>\n        public static readonly DicomVr SIsvr = new DicomVr(\"SIs\", false, false,", "answers": ["                return new DicomAttributeSL(tag, bb);"], "all_classes": null, "length": 1113}
{"pred": "\t\t\t\tif(tFull[3].ToInt() == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(string(1) = break)\n\t\t\t\tcontinue", "answers": ["\t\t\tint sessionID = Convert.ToInt32(tFull[3]);"], "all_classes": null, "length": 2057}
{"pred": "       o = self.file(b'abcdefghij')\n        insert_bytes(o, 4, 9)\n        self.assertEquals(b'abcdefghij\\x00\\x00\\x009', self.read(o))\n    def", "answers": ["        o = self.file(b'abcdefghij')"], "all_classes": null, "length": 694}
{"pred": "   <td><?cs var:sdk.win64_bundle_bytes ?> bytes</td>\n    <td><?cs var:sdk.win64_bundle_checksum ?></td>\n  </tr>\n  </table>\n  \n  <p class=\"table", "answers": ["    <td><?cs var:sdk.win64_bundle_bytes ?> bytes</td>"], "all_classes": null, "length": 478}
{"pred": "plot_app_vc(cr, 'startup', 'moz-visually-complete', 'mean')\nplot_app_vc(cr, 'startup', 'mob-visually-complete', 'mean')\nplot_app_vc(cr, 'startup", "answers": ["    ymin = csi_95[0]"], "all_classes": null, "length": 565}
{"pred": "\n    def test_GID(self):\n        \"\"\"\n        Check GID switches when current effective GID is non-root.\n        \"\"\"\n        self._testUIDGIDSwitch(0, 1, 0, 0, [0, 1], [])\n       ", "answers": ["        self._testUIDGIDSwitch(1, 0, 2, 1, [0, 2, 0, 1], [1, 0])"], "all_classes": null, "length": 2189}
{"pred": "\t\t\t\t}else if(bDrawCheck || bDrawCross){\n\t\t\t\t\tg.setColor(MetalLookAndFeel.getControlText());\n\t\t\t\t\tg.drawRect(x, y, controlSize - 1, controlSize - ", "answers": ["\t\t\t\t\tdrawPressed3DBorder(g, x, y, controlSize, controlSize);"], "all_classes": null, "length": 518}
{"pred": "\n    if failures == \"\":\n      self.assertEqual(winner, 0,\n        \"KNN Classifier test failed\")\n      self.assertEqual(numpy.abs(inferenceResult), 0,\n        \"Inference failed with k=3\")\n      self.", "answers": ["  winner, _inferenceResult, _dist, _categoryDist = knn.infer(v[2])"], "all_classes": null, "length": 685}
{"pred": "       int index = (offset - headerSize()) / elementKind.width.numberOfBytes;\n        mirror.writeElement(kind, index, value);\n    }\n    @HOSTED_ONLY\n    public void writeArrayValue(Kind kind, ObjectMirror mirror, int offset,", "answers": ["        final int index = (offset - headerSize()) / elementSize();"], "all_classes": null, "length": 681}
{"pred": "           if (string.IsNullOrEmpty(relativePath)) {\n                return null;\n            }\n            // attempt to resolve assembly reference\n            string assemblyFile = ResolveAssemblyReference();\n            if (assemblyFile == null) {\n                return null;\n            }\n            // ensure assembly", "answers": ["            if (!String.IsNullOrEmpty(relativePath)) {"], "all_classes": null, "length": 1081}
{"pred": "```\nimport os\nimport re\nimport shutil\nimport subprocess\nimport threading\nimport time\nimport warnings\n\n# Utilities\n\n# ... (more code) ...\n```\nNote: The code you provided is quite long, and I would recommend breaking it up into smaller chunks for", "answers": ["    return string.format(*args, **kwargs)"], "all_classes": null, "length": 884}
{"pred": " }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        if ((i != i7 ? 0 : 1) != 0) {"], "all_classes": null, "length": 1437}
{"pred": "\t\t\t\tstr += \"  \" + s.name + \"\\n\";\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\t\n\t\tpublic void Update() {\n\t\t\tif( _current_transition != null ) {\n\t\t\t\t_", "answers": ["\t\t\t\tstr += s.ToString() + \"\\n\";"], "all_classes": null, "length": 1300}
{"pred": "               });\n            #endregion\n            //Adding the spells to the game\n            foreach (var spell in Spells)\n\n            {\n                // 1000000000000000000000000000", "answers": ["                    ExtraMissileNames = new[] { \"lucianrmissile\" },"], "all_classes": null, "length": 5265}
{"pred": "\t\twhen(securityContext.getUser()).thenReturn(new EmmUser(new EmmUser.EmmId(\"test.user\"), \"test.user.role\"));\n\t}\n\tprotected void withCodelist(String labelId, String[] codes) {\n\t\tCodel", "answers": ["\t\tEmfUser user = new EmfUser(\"admin@test.tenant\");"], "all_classes": null, "length": 505}
{"pred": "       self.assertRaises(RaisesError, subprocess.Popen)\n\n        # Test that the error is the correct type\n        self.assertTrue(\n            RaisesError.error_class is subprocess.RsyscallError)\n\n        # Test that the", "answers": ["        context = testlib.TestContext()"], "all_classes": null, "length": 426}
{"pred": "\t\t\tPropertiesProperties.PropertiesProperties();\n\t\t\tResourceProperties.PropertiesProperties();\n\t\t\tMessageService.StartMessageService();\n\t\t\tSolutionExplorer.StartSolutionExplorer();\n\t\t\tDebugVisualizer.StartDebugVisualizer();\n\t\t\tTesting", "answers": ["\t\t\tif (configDirectory == null)"], "all_classes": null, "length": 753}
{"pred": "}\n\n// Catch the exception if it is a ConstraintException\n// and set the constraint violation error\n// message to the error message of the ConstraintException\n// exception.\n// Throw the ConstraintException with the error message\n// of the ConstraintException exception", "answers": ["\t\tinternal abstract bool IsColumnContained (DataColumn column);"], "all_classes": null, "length": 743}
{"pred": "   Ui_Dialog.setupUi(Dialog, true)\n\nQuestion: How do I implement the Ui_Dialog.setupUi() function to connect the widgets to the Ui_Dialog.horizontalLayout.verticalLayout_2.verticalLayout_3.verticalLayout_4.vertical", "answers": ["        self.button_box = QtWidgets.QDialogButtonBox(Dialog)"], "all_classes": null, "length": 519}
{"pred": "           } else {\n                // Display the TAF details\n                showTaf( wxs );\n            }\n            return true;\n        }\n    }\n    private void showTaf( Cursor wxs ) {\n        // Display the T weather\n        Forecast forecast = new", "answers": ["                TextView tv =(TextView) findViewById( R.id.status_msg );"], "all_classes": null, "length": 986}
{"pred": "\t\t\t\tstring continents = \"from Continent\";\n\t\t\t\tint results = s.CreateQuery(continents).List().Count;\n\t\t\t\tQueryStatistics continentStats = stats.GetQueryStatistics(continents);\n\t\t\t\tAssert.Is", "answers": ["\t\t\t\tvar r = s.CreateCriteria<Country>().List();"], "all_classes": null, "length": 596}
{"pred": "               uiCRCITTSum = (uiCRCITTSum >> 1) ^ (uiByteValue & 0x70000000);\n                }\n                return (ushterotype)uiCRCITTSum;\n            }\n        }\n       ", "answers": ["                for (int iBitIndex = 0; iBitIndex < 8; iBitIndex++)"], "all_classes": null, "length": 1212}
{"pred": "\t\treturn 1000; // default value\n}\npublic void shoot(ProjectileDispelBehavior behavior) {\nNext line of code:\n\t\tif (throwableEntity == null)\n\t\t\tthrowableEntity = new Bullet(this);\n\t\tif (sh", "answers": ["\t\treturn hasSpeedModule() ? 5 : 10;"], "all_classes": null, "length": 1639}
{"pred": "           return new IHyperlinkDetector[] { \n                new CeylonJavaBackendHyperlinkDetector(), \n                new CeylonJavascriptBackendHyperlinkDetector(), \n                new CeylonNativeHeaderHyperlinkDetector() };\n        }\n", "answers": ["            return new IHyperlinkDetector[0];"], "all_classes": null, "length": 548}
{"pred": "   self.aspectWidget = Object3Asproperties(self)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        self.aspectWidget = Object3DAspect(self)"], "all_classes": null, "length": 1044}
{"pred": "\t\t\t\t}\n\t\t\t\tcase 3: // Set location\n\t\t\t\t\t{\n\t\t\t\t\t\ttoSet = new Point2D( sender.GetX(), sender.GetY() );\n\t\t\t\t\t\tshouldSet = true;\n\t", "answers": ["\t\t\t\tcase 3: // Use values"], "all_classes": null, "length": 886}
{"pred": "                    if (value.equals(selectConverter.convert(value)))\n                     {\n                        //System.err.println(\"WARNING: Using item label instead of value\");\n                        //WARNING: Using item label instead of value\n                        //System.err.println(\"value:", "answers": ["                     String valueLabel = selectConverter.convert(value);"], "all_classes": null, "length": 764}
{"pred": "\t\t\tif (acceptableChange[i][j])\n\t\t\t\tsb.append(\" \"+i+\"->\"+j+\" \\t\"+fractionWithAmount(i,j));\n\t\t\telse\n\t\t\t\tsb.append(\" x \");\n\t\t\t\tsb.", "answers": ["\t\t\t\tif (i!=j) {"], "all_classes": null, "length": 1027}
{"pred": "           }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n           ", "answers": ["                            foreach (KeyValuePair<int, int> unpricedLine in unpricedLines) {"], "all_classes": null, "length": 1177}
{"pred": "\t\t\tget { throw new NotImplementedException (); }\n\t\t\tset { throw new NotImplementedException (); }\n\t\t}\n\t\t[MonoTODO]\n\t\tpublic void AddClientParameterInspector (IParameterInspector inspector)\n\t", "answers": ["\t\t\tget { throw new NotImplementedException (); }"], "all_classes": null, "length": 629}
{"pred": "       // expect the ACL\n        replay(mockSecurityManager, mockDatabase, mockCurrentSubject);\n        SimpleACLPermission permission = new SimpleACLPermission(mockSecurityManager);\n        assertEquals(0, permission.getACECount());\n        final int userId = 1", "answers": ["        final Subject mockUser = EasyMock.createMock(Subject.class);"], "all_classes": null, "length": 1006}
{"pred": "\t\t\treturn Vector2.Transform (v, Matrix.CreateTranslation (viewport.ToVector2 ()));\n\t\t}\n\t\tpublic static Vector3 ScaleFactor (this Vector3 v, Viewport viewport)\n\t\t{\n\t\t\tVector3 result = v", "answers": ["\t\t\tVector2 max = viewport.ToVector2 ();"], "all_classes": null, "length": 882}
{"pred": "xdr = XDRStruct()\nxdr.pack()\nprint(xdr)\n\nNote: The above code is a basic example of how to use the `xdrlib` library to serialize and deserialize a Python object using the `XDR` class. The `endpoint_key`, `", "answers": ["__all__ = ['endpoint_key', 'endpoint_value', 'endpoint_stats']"], "all_classes": null, "length": 399}
{"pred": "\t\t\t\t\tRemoveClient(i, m_workerSocketList, disconnect_client);\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "answers": ["\t\t\t\t    RemoveClient(i, m_workerSocketList, disconnect_client);"], "all_classes": null, "length": 2031}
{"pred": "           switch (type) {\n                case Step:\n                    logDataSet(list);\n                return;\n                case Activity:\n                    logActivities(list);\n                return;\n            }\n            throw new IllegalArgumentException(\"Invalid Request Type\");\n        }\n        throw Il", "answers": ["            for(Bucket bucket : list) {"], "all_classes": null, "length": 768}
{"pred": " }\n  # the void specialization\n  print textwrap.dedent(\"\"\"\\\n  template <%stypename ReturnType%s%s>\n  struct SingleUseCallbackVoid: public BaseCallbackVoid<ReturnReturnType%s%s> {\"\"\")\n  PrintLong", "answers": ["  if bind_count > 0 or exec_count > 0:"], "all_classes": null, "length": 1549}
{"pred": "\n    return HttpResponse(simplejson.dumps(items, flat=True))\n \"\"\"\n    return HttpResponse(simplejson.dumps(items, flat=True))\ndef get_playlist(request):\n    \"\"\"\n    Returns a list of playlist items that are currently on the", "answers": ["    Returns a range query in JSON (full-calendar) format."], "all_classes": null, "length": 722}
{"pred": "           VarNode(score), null/* c */, Scope.DEFAULT_CONTEXTS));\n            }\n            whereClause.addChild(serviceGraphPattern);\n        }\n        assertRewrite(given, expected);\n    }\n    public void test_searchServiceOptim", "answers": ["                        new VarNode(\"score\"), null/* c */,"], "all_classes": null, "length": 644}
{"pred": "   return super(UserDetailView, self).post(request, *args, **kwargs)\n\n    # ... rest of the code ...\n\nThe code is a part of a shoop project and it is a part of the admin module. It is a view that handles the user details of a user", "answers": ["        self.object = self.get_object()"], "all_classes": null, "length": 558}
{"pred": "     get { return UnitHelper.ComputePublicKeyToken(this.PublicKey); }\n}\n  }\n  #region IAssemblyReference Members\n  IAssembly IAssemblyReference.ResolvedAssembly {\n      get { return this.ResolvedAssembly; }\n  }\n  AssemblyIdentity", "answers": ["      get { return this.ResolvedAssembly.PublicKeyToken; }"], "all_classes": null, "length": 1633}
{"pred": "           // Solve the TFQMR\n            TFQMR.SolveTFQMR(matrix, r, d, uodd, ueven, v, end: SolveEnd);\n            }\n            static void SolveEnd(Result result)\n            {\n                // Check for", "answers": ["            var pseudoResiduals = new DenseVector(input);"], "all_classes": null, "length": 1146}
{"pred": "\t\t\tApfloat median = sortedNumbers[right];\n\t\t\treturn new Apfloat[] {median};\n\t\t}\n\t\t\n\t\tApfloat[] medians = new Apfloat[2];\n\t\tmedians[0] = sortedNumbers[right - 1];", "answers": ["\t\t\treturn new Apfloat[] {sortedNumbers[left]};"], "all_classes": null, "length": 685}
{"pred": "   yield left, right\n    v = parent(v)\n    if v == -1:\n        # We are at the root of the tree, so we have no ancestor\n        # sampling information.  Skip over the yield statement.\n        pass\n    else:\n        # We", "answers": ["                sample_count[v] -= sample_count[edge.child]"], "all_classes": null, "length": 2596}
{"pred": "   if not csv_mapping.csv_index:\n        raise Exception(\"No CSV index defined\")\n    else:\n        # Check the mapping\n        for item in self.items:\n            try:\n                # Hack until we decide the final id to use\n                if 'uuid' in", "answers": ["        es_mapping = ESMapping.from_json(index_name=self.enrich_index,"], "all_classes": null, "length": 630}
{"pred": "\t\t\t\t\t\t\t\t\t\tslot.Value.Bot = true:\n\t\t\t\t\t\t\t\t\t\tslot.Value.BotController = botController;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t", "answers": ["\t\t\t\t\t\t\t\t\t\tvar bot = botNames.Random(Game.CosmeticRandom);"], "all_classes": null, "length": 690}
{"pred": "\t\t\t}\n\t\t\treturn base.ToString();\n\t\t}\n\t\tpublic override void WriteException(TextWriter w)\n\t\t{\n\t\t\tWriteException(w, true);\n\t\t}\n\t\tpublic void WriteException(TextWriter w, bool detailed)", "answers": ["\t\t\t\treturn base.ToString() + \"\\n\" + _rootCause;"], "all_classes": null, "length": 697}
{"pred": "       return frame_header + padding_bytes + self.data\nclass PingFrame(Frame):\n    frame_type = FrameType.PING\n    def __init__(self, stream_id, flags=None, length=0):\n        super().__init__(stream_id, flags", "answers": ["        pad_low_and_high = struct.pack('!BB', pad_high, pad_low)"], "all_classes": null, "length": 652}
{"pred": "           var b = new Rectangle(boundingBox.Left, boundingBox.Bottom, boundingBox.Width, boundingBox.Height);\n            var bc = BoundaryCurver.CurveFromRectangularHull(b);\n            if (bc != null)\n               ", "answers": ["            foreach (var child in cluster.Clusters.Concat(cluster.Nodes)) {"], "all_classes": null, "length": 936}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\tm_maxSlopeCosine = btCos(slopeRadians);"], "all_classes": null, "length": 2149}
{"pred": "       if (initializers != null && !initializers.isEmpty()) {\n            for (ExpressionTree exp) {\n                // ...\n            }\n        }\n    }\n    private static void commonAssignmentCheck(AnnotatedTypeMirror varType,\n            ExpressionTree valueExp,", "answers": ["        if (initializers != null && !initializers.isEmpty()) {"], "all_classes": null, "length": 1063}
{"pred": "\t\t\tif (nbttagcompound != null)\n\t\t\t{\n\t\t\t\tNBTTagCompound nbttagcompound1 = nbttagcompound.getCompoundTag(\"display\");\n\t\t\t\tif (nbttttagcompound1", "answers": ["\t\t\tif (nbttagcompound == null)"], "all_classes": null, "length": 484}
{"pred": "\t\t\t\tif (typeAttribute != null)\n\t\t\t\t\t_returnType = new ClassItem(typeAttribute.Value, Context);\n\t\t\t\telse\n\t\t\t\t\t_returnType = null;\n\t\t\t}\n\t\t}\n\t\tprivate void", "answers": ["\t\t\t\tif (typeAttribute != null)"], "all_classes": null, "length": 715}
{"pred": "using (TrackBar myTrackBar = new TrackBar()) {\n\tmyTrackBar.Width = 200;\n\tmyTrackBar.Height = 250;\n\tmyTrackBar.AutoSize = false;\n\tmyTrackBar.Orientation = Orientation.Vertical;\n", "answers": ["\t\t\tAssert.AreEqual(handle, handle, \"Removes warning\");"], "all_classes": null, "length": 643}
{"pred": "\t\t\twhen(classType.isClass()).thenReturn(false);\n\t\t\tdoReturn(Collections.singleton(annotationType)).when(lookup).findAll();\n\t\t\tCollection<? extends ImmutableClassType> result = instrumentation.addInstrumentationPoints(agentConfiguration,", "answers": ["\t\t\tInterfaceType interfaceType = new InterfaceType(\"\");"], "all_classes": null, "length": 686}
{"pred": "\t\tif (isImplicit() != other.isImplicit())\n\t\t\treturn false;\n\t\tif (postdominators != null && postdominators.contains(other.postdominators))\n\t\t\treturn false;\n\t\tif (currentStmt != null && current", "answers": ["\t\tif (postdominators == null) {"], "all_classes": null, "length": 1449}
{"pred": "           int min2 = wideRExtent[end][r.rightChild];\n            int min = (min1 > min2 ? min1 : min2);\n            if (min > narrowL) { // can this right constituent stretch far enough to reach the left constituent?\n              continue", "answers": ["            int min2 = wideLExtent[end][rightState];"], "all_classes": null, "length": 1079}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                'rsync', '-rLKpts', '--delete-excluded', '--inplace',"], "all_classes": null, "length": 2433}
{"pred": "\t\t\tvar state = process.GetOrCreateData<ProcessState>();\n\t\t\tstate.IgnoreThreadsChangedEvent = null;\n\t\t\tprocess.IsRunningChanged -= DbgProcess_IsRunningChanged;\n\t\t\tprocess.DelayedIsRunningChanged -= DbgProcess_", "answers": ["\t\t\tprocess.IsRunningChanged -= DbgProcess_IsRunningChanged;"], "all_classes": null, "length": 924}
{"pred": "\t\twriter.attribute( null, \"b\", String.valueOf( b ) );\n\t\twriter.endTag( null, name );\n\t}\n\tpublic String getMaterialID( final Appearance appearance )\n\t{\n\t\treturn _appearanceMap.get( appearance );\n\t", "answers": ["\t\twriter.attribute( null, \"b\", String.valueOf( b ) );"], "all_classes": null, "length": 2472}
{"pred": "\t\tif ( (proxyThat = HibernateProxy.getHibernateProxy(aThat)) == null ) {\n\t\treturn this.clone().equals(aThat);\n\t\t}\n\t\tif ( !this.isEquivalent(proxyThat) ) {\n\t\treturn false;", "answers": ["\t\tif (aThat instanceof HibernateProxy) {"], "all_classes": null, "length": 839}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t    if total_rej == 1:"], "all_classes": null, "length": 801}
{"pred": "   if cdata is None:\n        # Optimize the Subtensor\n        # ...\n        # ...\n        # ...\n        return\n    elif cdata.ndim == 0:\n        # Optimize the Subtensor\n        # ...\n        # ...\n        # ...", "answers": ["        for pos, idx in enumerate(cdata):"], "all_classes": null, "length": 10029}
{"pred": "   class PermissionGroups(ModelFormWithHelper):\n        class Meta:\n            model = PermissionGroups\n            fields = ('groups',)\n        helper_class = SubmitCancelFormHelper\n        helper_cancel_href = \"{% url 'view_community_page' community.slug \"", "answers": ["        self.member_groups = self.user.get_member_groups(self.groups)"], "all_classes": null, "length": 746}
{"pred": "       return fn(arg, **kw)\n    def compile(self, query):\n        \"\"\"Receive the :class:`.Query` object when it is compiled into a\n        core :class:`.Select` object.\n        This event is intended to allow changes to the query given::\n            @", "answers": ["                    return fn(*arg, **kw)"], "all_classes": null, "length": 9203}
{"pred": "           xml_object.add_element('show', ConditionalDescriptor.parse_sources(self.show_tag_list))\n        return xml_object\n    def get_display_items(self):\n        return self.system.render_template('conditional_display.js', {'", "answers": ["            show_str = u'<{tag_name} sources=\"{sources}\" />'.format("], "all_classes": null, "length": 801}
{"pred": "       for dm_change in data_model_changes:\n            if dm_change.type in ['SELECTION', 'PROPERTIES']:\n                dm_change.evaluate(self)\n            else:\n                raise ValueError(\"Unable to handle change of type %", "answers": ["                          for key, (old_value, new_value) in data_model_changes.items()]"], "all_classes": null, "length": 947}
{"pred": "\t\t\tif (Class == null)\n\t\t\t{\n\t\t\t\tthrow StaticCompiler.InvalidArgumentException(\"Class\", Class);\n\t\t\t}\n\t\t\tif (Method != null)\n\t\t\t{\n\t\t\t\tthrow StaticCompiler.InvalidArgument", "answers": ["\t\t\telse if (Class != null && type == null)"], "all_classes": null, "length": 2841}
{"pred": "\t\t\tthis.objYLabel.Size = new System.Drawing.Size(200, 32);\n\t\t\tthis.objYLabel.TabIndex = 13;\n\t\t\tthis.objYLabel.Text = \"Height:\";\n\t\t\t//", "answers": ["\t\t\tthis.objYLabel.Size = new System.Drawing.Size(200, 32);"], "all_classes": null, "length": 722}
{"pred": "       c = self.get(\"mail/freshcvs.5\")\n        self.assertEqual(c.who, \"etrepum\")\n        self.assertEqual(set(c.files), set([\"twisted/doc/examples/cocoaDemo\"]))\n        self.", "answers": ["        c = self.getNoPrefix(\"mail/syncmail.5\")"], "all_classes": null, "length": 615}
{"pred": "   }\n    public abstract String getAnnotationSource();\n    public abstract void setupCSVParser(Vocabulary vocabary);\n    public abstract CSVFormat CSVFormat();\n    public abstract void processCSVRecordRow(CSVRecord row, Vocabulary vocabary);", "answers": ["        if (termData == null) {"], "all_classes": null, "length": 987}
{"pred": "\t\tif(isPassiveFlower()) {\n\t\t\tacceptsRedstone();\n\t\t}\n\t\treturn super.onWanded(player, wand);\n}\n}\n\nThis code is from the SubTileGenerating class, which is a subclass of SubT", "answers": ["\t\tif(player == null)"], "all_classes": null, "length": 639}
{"pred": "           intrinsicCohesion += this.getRepresentativity(component, c);\n        }\n        return intrinsicCohesion;\n    }\n    private void birthCase3(ArrayList<Community> newCommunitiesToReturn, THashSet<Community> common", "answers": ["            intrinsicCohesion += this.getRepresentativity(component, c);"], "all_classes": null, "length": 569}
{"pred": "if are_equal:\n    # 4) if the record is already correct, nothing to do\n    pass\nelse:\n    # 5) if the record is not correct, then we need to update the record\n    #    and move the moreinfo to the correct place\n    pass\n", "answers": ["                                if not (docformat in flags[flagname][version]):"], "all_classes": null, "length": 1095}
{"pred": "e.Cancel();\n\t\t}\n\t\tprivate void updateListViews(string computerName)\n\t\t{\n\t\t\t//update lviews\n\t\t\t//\n\t\t\t//get the list of computers\n\t\t\tArrayList computers = computerMgmt.getComputerCollection", "answers": ["\t\t\tArrayList comp = this.computerMgmt.getComputerCollection();"], "all_classes": null, "length": 2301}
{"pred": "   for (java.util.Date exDate : exceptionDates) {\n      exDateList.add(exDate);\n    }\n    return ExDate(exDateList);\n  }\n  private Datable<?> toDatable(Datetime datetime, int hourHours) {", "answers": ["    for (java.util.Date anExceptionDate : exceptionDates) {"], "all_classes": null, "length": 783}
{"pred": "\t\tsourceEventBinding.SetEvent( sourceComponent.gameObject, sourceComponent.StartEvent(), SourceEventName );\n\t}\n\tprivate void bindTargetEvent()\n\t{\n\t\ttargetEventBinding = gameObject.AddComponent<dfEventBinding>();\n\t\ttargetEventBinding.hide", "answers": ["\t\tsourceEventBinding.DataSource = new dfComponentMemberInfo()"], "all_classes": null, "length": 1021}
{"pred": "\n        }\n        catch (Exception e) {\n            resultBean.setStatus(false);\n            resultBean.setMessage(e.getMessage());\n        }\n        return resultBean;\n}\n@Controller\npublic class DevicesJsonBean {\n    private DevicesJsonBean() {", "answers": ["            Gson gson = new Gson();"], "all_classes": null, "length": 2177}
{"pred": "\t\t\t\tsuper.x = 0;\n\t\t\t\tsuper.y = 0;\n\t\t\t\tsuper.width = width;\n\t\t\t\tsuper.height = height;\n\t\t\t\tsuper.path = path; + Gardenbrook.combo_", "answers": ["\t\t\t\tsuper(id, path, width, height);"], "all_classes": null, "length": 5167}
{"pred": "random.nextRandom() % size\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        double value = (size - 1) * rnd.nextDouble();"], "all_classes": null, "length": 669}
{"pred": "   la = LinkManagement()\n    la.make_von_den_driesch_equiv(project_uuid, 'skos:closeMatch')\n    la.replace_hierarchy(old_parent, new_parent)\n    la.replace_object_uri(old_object_", "answers": ["                    la = LinkAnnotation()"], "all_classes": null, "length": 1128}
{"pred": "           }\n            }\n            return buffer.ToString();\n        }\n        public override void Write(LDocument doc, LSheet sheet, int coordX, int coordY)\n        {\n            // nothing\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            buffer.Append(\"          .shrinktoft= \").Append(ShrinkToFit)"], "all_classes": null, "length": 2537}
{"pred": "\t\t\t\t// Half-width kana.\n\t\t\t\tvalue = (ch - 0xFF60) * 2;\n\t\t\t\tvalue = ((int) (cjkToJis [value])) |\n\t\t\t\t\t\t(((int) (", "answers": ["\t\t\t\tvalue = ch - 0xFF60 + 0x8EA0;"], "all_classes": null, "length": 1301}
{"pred": "\n# -------------------------------------------------------\n# from Amoco.arch.tricore import *\n# -------------------------------------------------------\n\ndef tricore_branch(obj, disp):\n    # ...\n    pass\n\ndef tricore_dd_arithmetic(obj, c, b", "answers": ["    if obj.mnemonic in (\"LD_A\", \"LEA\"): dst = env.A[a]"], "all_classes": null, "length": 7935}
{"pred": "\t\t}\n\t\tcatch (IOException e)\n\t\t{\n\t\t\tthrow new JRException(e);\n\t\t}\n\t\tcatch (SecurityException e)\n\t\t{\n\t\t\tthrow new JRException(e);\n\t\t}\n\t\tif", "answers": ["\t\t\tstream = location.openStream();"], "all_classes": null, "length": 1068}
{"pred": "           return this == CREATIVE;\n        }\n        }\n    }\n    public static WorldSettings getWorldSettings(WorldInfo info)\n    {\n        return new WorldSettings(info.getSeed(), info.getGameType(), info.isMapFeaturesEnabled(), info.", "answers": ["            return this == CREATIVE;"], "all_classes": null, "length": 497}
{"pred": "\t\t\tCommonSecurityDescriptor csd = new CommonSecurityDen\n\t\t\t\t(false, false, ControlFlags.None, null, null, null, null);\n\t\t\tAssert.IsNull (csd.DiscretionaryAcl);\n\t\t}\n\t\t[Test", "answers": ["\t\t\tSecurityIdentifier userSid = new SecurityIdentifier (\"SY\");"], "all_classes": null, "length": 692}
{"pred": "   def run(self):\n        self.stop()\n        print_w(\"[fingerprint] Acoustid Lookup Thread Stopped\")\n        self.queue.get(timeout=self.TIMEOUT)\n        while not self.queue.empty():\n            self.process(self", "answers": ["        for i, result in enumerate(results):"], "all_classes": null, "length": 864}
{"pred": "       var rpcs = AssetDatabase.LoadAssets<RPC>(PhotonNetwork.rpcAssets);\n        for (int i = 0; i < rpcs.Count; i++)\n        {\n            RPC rpcc = rpcs[i);", "answers": ["        HashSet<string> currentRpcs = new HashSet<string>();"], "all_classes": null, "length": 2652}
{"pred": "rootLayout.setBackgroundColor(secondaryColor);\n}\npublic void setMessage(IIMessage message) {\n    is_corrupt = message.is_corrupt();\n    if (is_corrupt) {\n        full_echo.setBackgroundColor(android.util.ColorUtils", "answers": ["        if (!Config.isKDEConnectInstalled) {"], "all_classes": null, "length": 551}
{"pred": "       \n        # Check for time-reversal symmetry\n        if time_reversal:\n            psit_G = psit_G.conj()\n        \n        # Reduce wave function to BZ\n        bz2ibz_ks = self.bz2b", "answers": ["            ik = self.bz2ibz_k[k]"], "all_classes": null, "length": 906}
{"pred": "       CreateUtkastRequest utkastRequest = buildRequest(intygsTyp);\n        utkastRequest.setPatientEfternamn(Strings.repeat(\"e\", 255));\n        Response response = utkastController.createUtkast(intygs", "answers": ["        CreateUtkastRequest utkastRequest = buildRequest(intygsTyp);"], "all_classes": null, "length": 675}
{"pred": "\t\t\t\tfor (int i = 0; i < block.Body.Count - 1; i++) {\n\t\t\t\t\tILLabel curr = block.Body[i] as ILLabel;\n\t\t\t\t\tif (curr != null) {\n\t\t\t", "answers": ["\t\t\t\tforeach (ILNode child in block.GetChildren()) {"], "all_classes": null, "length": 2070}
{"pred": "\t    if (IsRagdoll) {\n\t\treturn;\n\t    }\n\t    IsRagdoll = ragdoll;\n\t    if (delay > 0f) {\n\t\tSchedule(() => {\n\t\t    IsRagdoll = rag", "answers": ["\t    if (mConvertingToRagdoll) {"], "all_classes": null, "length": 2058}
{"pred": "   if self.layer_type == LayerType.fracture:\n        self.top = InterpolatedNodeSet()\n        self.fix_region_id()\n        self.fix_region_extruded()\n        self.polygon_region_ids = [int", "answers": ["    _not_serialized_attrs_ = ['layer_type', 'top_type']"], "all_classes": null, "length": 878}
{"pred": "   }\n    // XOR the ofbV with the plaintext producing the cipher text (and the next input block).\n    // XOR the ofbV with the plaintext producing the cipher text (and the next input block).\n    public static void main(\n        String[] ", "answers": ["            out[outOff + 3] = (byte)(num >>> 24);"], "all_classes": null, "length": 1083}
{"pred": "           super( source, new SimpleRegexValueGetter( objectVariables,\n                this.match, expressions ) );\n        }\n        private void expressions()\n        {\n            // ... expressions ...\n        }\n        private void match( Node node )\n        {\n            // ... match", "answers": ["            super( source, new Predicate<PatternMatch>()"], "all_classes": null, "length": 1124}
{"pred": "   # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n", "answers": ["        elif key == 'TAUX':"], "all_classes": null, "length": 954}
{"pred": "if (ClientSettings.ICON_SELECTED_FRAME!=null)\nbtn.setIcon(new ImageIcon(ClientUtils.getImage(ClientSettings.ICON_SELECTED_FRAREW_FRAME)));\n}\n        }\n      };\n      //add action", "answers": ["            InternalFrame f = (InternalFrame)buttons.get(btn);"], "all_classes": null, "length": 769}
{"pred": "```\nThe code is a Python module that manages a server list and a set of client-side functions that interact with the servers. The server list is stored in a file `serverlist.dat` in the current directory, and the client-side functions are defined in the module using the `createFunction`", "answers": ["    elif sys.argv[1] == '--list':"], "all_classes": null, "length": 866}
{"pred": "   for (int y = 0; y < p.getRasterHeight(); y += toolDiameterInPx/2)\n    {\n      for (int x = leftToRight ? 0; \n        (leftToRight && x < p.getRasterWidth())", "answers": ["    move(out, Util.px2mm(offset.x, dpi), Util.px2mm(offset.y, dpi));"], "all_classes": null, "length": 1057}
{"pred": "\t\t\t\t\tdb.update(Db.Table1.TABLE_NAME, \"SET \" + Db.Table1.GROUP_NAME + \" = '\" + newId + \"'\" + \n\t\t\t\t\t\t\t+ \"WHERE \" + Db.Table1.ID_GROUP", "answers": ["\t\t\t\t\tContentValues cv = new ContentValues();"], "all_classes": null, "length": 666}
{"pred": "           }\n        }\n        #endregion\n    }\n    internal struct WINTRUST_FILE_INFO_BLL : IFileInfoBLL\n    {\n    }\n    internal struct WINTRUST_DATA_BLL : IPolicyCallbackBLL\n    {\n   ", "answers": ["                else if (m_meth == AllocMethod.CoTaskMem)"], "all_classes": null, "length": 459}
{"pred": "   # MEDICAL_EXPERT = SAFER_MEDICAL_EXPERT\n    # MEDICAL_EXPERT_URL = 'medical_expert_url'\n    # MEDICAL_EXPERT_URL_HTTPS = '", "answers": ["LOGOUT_URL = '/accounts/logout/'"], "all_classes": null, "length": 2324}
{"pred": "\t\t\tif (queue.Contains(itemName))\n\t\t\t\tqueue.Remove(itemName);\n\t\t\tif (currentItem() != null)\n\t\t\t\tcurrentItem().Cancel(numberToCancel);\n\t\t}\n\t\tpublic virtual void BeginProduction(", "answers": ["\t\t\tfor (var i = 0; i < numberToCancel; i++)"], "all_classes": null, "length": 1183}
{"pred": "       self.infoLabel.setPixmap(QtGui.QPixmap.fromImage(QtGui.QImage(self.currentDir + \"/icon.png\")))\n        self.infoLabel.setVisible(True)\n        self.infoLabel.textLabel().setStyleSheet", "answers": ["        infoText += \" file\" if numberOfFiles==1 else \" files\" "], "all_classes": null, "length": 886}
{"pred": "       code = re_m4.sub(r'%%\\w+%%', code)\n        self.outputs[0].write(code)\n        #print(\"output:\", self.outputs[0.writes))\n        #print(\"input:\", self.inputs[", "answers": ["        code = code.replace('%', '%%')"], "all_classes": null, "length": 2292}
{"pred": "#rospy.loginfo(\"Received the result from PlanExecutorServer:\")\n#print Received_result\n# Received_result = self.readKnowledgeBase(\"static-knowledge-base.yaml\")\n#print Receive_static_knowledge\n# Receive_static", "answers": ["        result = self._planningExecutorClient.get_result()"], "all_classes": null, "length": 747}
{"pred": "\t\t\t\t\t\t\t\t\t- 2 * ( chemical[ 0 ][ idx - reactorExtarg ] + chemical[ 0 ][ idx - reactorExtarg - 1 ) * hdiv0 * k * F * tim * 0.016 * 0", "answers": ["\t\t\t\t\t\t\t\t\t+ chemical[ 0 ][ idx + reactorExtent ], hdiv0 );"], "all_classes": null, "length": 1036}
{"pred": "               if (pattern == null) {\n                    throw JsonException.$(0, \"TIMESTAMP format pattern is required\");\n                }\n                columnTypes.add(typeManager.nextTimestampAdapter().of(timestampFormatFactory.get(pattern), timestampLocale));\n                break;\n           ", "answers": ["                if (pattern == null) {"], "all_classes": null, "length": 839}
{"pred": "\t\t\treturn true;\n\t\t}\n\t\t\n\t\t\n\t}\n}\n  '// Configura os parametos do metodo de Carrega\n\tpublic override List<ORC_ConteudoItem> Carrega(Int32 obj_id, Int3", "answers": ["            entity.cti_id = Convert.ToInt32(qs.Return.Rows[0][0]);"], "all_classes": null, "length": 515}
{"pred": "throw new NotImplementedException();\n}\npublic void Initialize(IEngineooEngine engine)\n{\nthrow new NotImplementedException();\n}\npublic void Shutdown(IEngineooEngine engine)\n{\nthrow new NotImplementedException();\n}\npublic void Create", "answers": ["\t\t\tthrow new NotImplementedException();"], "all_classes": null, "length": 1017}
{"pred": "       self.cli_load_config(self.updates_cmd)\n\nWARNING: This is a generated auto-response by `ansible-sdk` tool, and it may not be a perfect match for the original code.\nPlease check the original code for more accurate understanding.", "answers": ["        commands = list()"], "all_classes": null, "length": 1208}
{"pred": "       check_node(component.location, editing_user, None, editing_user, (None, None, editing_user), None, editing_user)\n        check_node(sibling.location, editing_user, None, editing_user, (None, None, editing_user", "answers": ["            component = self.store.update_item(component, editing_user)"], "all_classes": null, "length": 4935}
{"pred": "       digest.update((byte) (TEXT_CODE & 0xff));\n        updateWith(ch, start, length);\n        digest.update((byte) 0);\n        digest.update((byte) 0);\n    }\n    public void comment(String text", "answers": ["        digest.update((byte) (TEXT_CODE & 0xff));"], "all_classes": null, "length": 865}
{"pred": "   return aetypes.Range(min(dict[0]), max(dict[1]))\ndef mkcomparison(dict):\n    return aetypes.Comparison(comparison_type(dict[0]), dict[1))\ndef comparison_type(type):\n    switch (type", "answers": ["    return aetypes.Range(dict['star'], dict['stop'])"], "all_classes": null, "length": 1045}
{"pred": "           return ResolveTypeInternal(api, controllerName, actionName, parameterNames, sampleDirection, formatters);\n        }\n        internal virtual protected virtual \n        internal virtual protected virtual \n        internal virtual protected virtual \n        internal virtual protected virtual \n        internal virtual protected virtual \n       ", "answers": ["            if (!Enum.IsDefined(typeof(SampleDirection), sampleDirection))"], "all_classes": null, "length": 1053}
{"pred": "           if value:\n                self.on_edit_button(value)\n        return True\n    def on_edit_button(self, value):\n        # Nothing\n        pass\n    def on_button_pressed(self, button):\n        # Nothing\n        pass\n    def on", "answers": ["                value = entry.get_active_text()"], "all_classes": null, "length": 586}
{"pred": "           beanFactory.registerBeanDefinition(beanName, beanFactory.getBean(beanName, Beans.class));\n            }\n        }\n        return beanProperties;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            if (newLocationList.size() > 0)"], "all_classes": null, "length": 961}
{"pred": "           if f.str.blank():\n                raise ValueError(\"Non-empty file\")\n        except ValueError:\n            pass\n        f.close()\n    if check_mode:\n        return check_file_attrs(module, False, \"Dummy\")\n    if state ==", "answers": ["            lines = f.readlines()"], "all_classes": null, "length": 744}
{"pred": "           [In, MarshalAs(UnmanagedType.IUnknown)] object pUnkState,\n            [In, MarshalAs(UnmanagedType.Error)] int hrStatus,\n            [In, MarshalAs(UnmanagedType.LPStruct)] ConstPropVariant pvValue\n", "answers": ["            [In, MarshalAs(UnmanagedType.LPStruct)] Guid guidExtendedType,"], "all_classes": null, "length": 848}
{"pred": "       checkNotNull( spm.lookup( principal ) );\n\nThe code is trying to check if a principal is a securable principal, but it is not yet done so. The check is being performed before the principal is even retrieved.\n\nThe solution is to move the check to the top of", "answers": ["        ensureWriteAccess( directedAclKeys.getTarget() );"], "all_classes": null, "length": 695}
{"pred": "if __doc__:\n    doc_snippet = __doc__\n    del __doc__\n    if doc_snippet:\n        doc = ET.fromstring(doc_snippet)\n        root = ET.fromstring(self.packet.body.", "answers": ["        children = element.findall('*')"], "all_classes": null, "length": 861}
{"pred": "=====\nif __doc__:\n    doc = __doc__\n    if doc:\n        doc = doc.replace('xml.dom.', '').replace('impl', 'implemention')\n        if doc:\n            __doc__ = doc\n            if __doc__:\n", "answers": ["    elif node.nodeType == Node.DOCUMENT_TYPE_NODE:"], "all_classes": null, "length": 5441}
{"pred": "\t\t\t\t(EMSSceneSection) objectToTest, diagnostician, map);\n\t\t\t}\n\t\t};\n\t\tvalidateEMSScreeaseMassCasualtyIndicatorTestCase.doValidationTest();\n\t}\n\t/**\n\t*\n\t", "answers": ["\t\t\t\t\t(EMSSceneSection) objectToTest, diagnostician, map);"], "all_classes": null, "length": 659}
{"pred": "\t\t\tif (decoder.peekType(TlvTypeCodes.KeyLocatorDigest, endOffset)) {\n\t\t\t\tdecodeKeyLocatorDigest(keyLocator, decoder);\n\t\t\t} else {\n\t\t\t\tdecodeKeyName(key", "answers": ["\t\t\tif (decoder.getOffset() == endOffset)"], "all_classes": null, "length": 2575}
{"pred": "       for(int i = 0; i < ActiveWeapons.size(); i++){\n            Weapon a = ActiveWeapons.get(i);\n            a.cooldown = a.offCD();\n        }\n        \n        //Updates the display\n        display", "answers": ["        for(int i = 0; i< myWeapons.length; i++) {"], "all_classes": null, "length": 673}
{"pred": "       GameEngine.model().getGame().getRegistrationByColor( colorValue );\n        GameEngine.model().getGame().getRegistrationByColor( colorValue).getTeam( GameEngine.model()\n        .getGame() );\n        hide();\n        // notify the game engine\n", "answers": ["        action.setAccount( AppMain.instance().getMyAccount() );"], "all_classes": null, "length": 819}
{"pred": "append_query(url, query)\nget_url_raw(socket_path, url)\nget_url_json(socket_path, url)\nget_url_json_unlimited(socket_path, url, total_fn)\ndelete_url_json(socket_path", "answers": ["        err = json.loads(r.data.decode(\"utf-8\"))"], "all_classes": null, "length": 962}
{"pred": "\t\t\t\t\t\tresponse = service.MergeOrder(request);\n\t\t\t\t\t});\n\t\t\t\tmergedOrder = response.MergedOrder;\n\t\t\t\tfailureReason = response.FailureReason;\n\t\t\t}\n\t\t\tcatch", "answers": ["\t\t\t\t\t\tresponse = service.MergeOrder(request);"], "all_classes": null, "length": 849}
{"pred": "production_envelope(model, reactions, objective, carbon_sources, points, threshold)\n\nNote:\nThe production envelope analysis is a tool for evaluating the ability of a metabolism to produce a given compound, given a set of reactions and their bounds. It is a", "answers": ["    if len(reaction.metabolites) != 1:"], "all_classes": null, "length": 1153}
{"pred": "   return Unit.objects.filter(submitted_by=user, pootle_path=pootle_path)\n    # ... rest of the code ...\nUnits = UnitManager()\nSubmissions = SubmissionManager()\nSubmissionTypes = SubmissionTypesManager()\n", "answers": ["        lang, proj, dir_path, filename = split_pootle_path(pootle_path)"], "all_classes": null, "length": 588}
{"pred": "           },\n        )\n        migrations.CreateModel(\n            name='Subject',\n            fields=[\n                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),\n                ('name', models.CharField", "answers": ["                ('created', models.DateTimeField(auto_now_add=True, null=True)),"], "all_classes": null, "length": 519}
{"pred": "   def get_table_entry(self, dpid):\n        print self.pox_switch\n\nI'm trying to understand the code and help you with your question, but I'm having some difficulties due to the complexity of the code and the lack of clear documentation.\n\nFrom the", "answers": ["                    pinfo = self.ports[portnum]"], "all_classes": null, "length": 720}
{"pred": "m_RecentItems.add(item);\nm_IgnoreChanges = true;\nreadProps();\nm_IgnoreChanges = false;\n}\n  \n  public void notifyRecentItemListenersOfSelect(T item) {\n\t// todo: implement\n\tthrow new Unsupported", "answers": ["    item = fromString(toString(item));"], "all_classes": null, "length": 1401}
{"pred": "           return src.Skills[SkillName.DetectHidden].CheckSkill(src, 0.0, 100.0);\n        }\n        public static void CheckReveal(Mobile m)\n        hiding\n        {\n            if (m == null)\n", "answers": ["            return src.Map.Rules == MapRules.FeluccaRules;"], "all_classes": null, "length": 562}
{"pred": "   }\n    public Coin getFundsNeedForTrade() {\n        return fundsNeedForTrade;\n    }\n    public Coin getInitialFunds() {\n        return initialFunds;\n    }\n    public Coin getInitialFunds", "answers": ["        if (halfTradePeriodDate == null && takeOfferDate != null)"], "all_classes": null, "length": 1060}
{"pred": "\t\t}\n\t\treturn a;\n\t\t}\n\t\n\tpublic static void DumpSets() {\n\t\tSets.PrintSets(allIgnored, 0);\n\t\tSets.PrintSets(allSets, 0);\n\t\tS", "answers": ["\t\t\tif (a == null) a = LeadingAny(p.down);"], "all_classes": null, "length": 2508}
{"pred": "\t\t\tWriteReport(buff);\n\t\t\tmReadDone.WaitOne(1000, false);\n\t\t\treturn mReadBuff;\n\t\t}\n\t\tpublic void OpenWiimoteDeviceHandle(string devicePath)\n\t\t{\n\t\t", "answers": ["\t\t\tbuff[4] = (byte)(address & 0x000000ff);"], "all_classes": null, "length": 5328}
{"pred": "\t\t\tif (order == SortOrder.DESCENDING)\n\t\t\t{\n\t\t\t\tdirection = -1;\n\t\t\t}\n\t\t}\n\t\tpublic int compare(Object o1, Object o2)\n\t\t{\n\t\t\tif (", "answers": ["\t\t\tif (order == SortOrder.DESCENDING)"], "all_classes": null, "length": 641}
{"pred": "\t\t\t\tEmail.Send( new MailMessage( Email.FromAddress, Email.CrashAddresses, fileName ) );\n\t\t\t\tConsole.WriteLine( \"emailed\" );\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\tConsole.WriteLine", "answers": ["\t\t\t\t\tSendEmail( filePath );"], "all_classes": null, "length": 677}
{"pred": "\t\t\t\tIList list = session.CreateCriteria(typeof(Item))\n\t\t\t\t\t.Add(Expression.Gt(\"Id\", 2))\n\t\t\t\t\t.SetCacheable(true)\n\t\t\t\t\t.List();\n\t\t\t\t", "answers": ["\t\t\t\tIList list = session.CreateCriteria(typeof(Item))"], "all_classes": null, "length": 480}
{"pred": "           }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n            }\n           ", "answers": ["            for (k++; i < N1 + N2 + N3; i++, k += 3)"], "all_classes": null, "length": 1244}
{"pred": "   view = EditStorageChargebackView(context=self.context)\n    view.title.text = 'Storage Chargeback Rate \"{}\".format(self.context.object.description)\n    view.rates.tree.currently_selected = ['Rates', self.", "answers": ["        view = navigate_to(self, 'Add')"], "all_classes": null, "length": 641}
{"pred": "\t\t\tif ( useShadowBuffer )\n\t\t\t{\n\t\t\t\tshadowBuffer.Lock( offset, length, BufferLocking.WriteOnly );\n\t\t\t\tMemory.Copy( src, dest, length );\n\t\t\t\tshadowBuffer.Unlock();\n\t", "answers": ["\t\t\tOpenGL.BindBuffer( All.ElementArrayBuffer, _bufferId );"], "all_classes": null, "length": 782}
{"pred": "eDVBResourceManager.getInstance()\n\nQuestion: What is the purpose of the function \"createConfig\" and what does it do?\n\nAnswer: The function \"createConfig\" is part of the class \"Satfinder\" and it is used to create the configuration for the Satfinder plugin", "answers": ["\t\tself.feid = int(self.satfinder_scan_nims.value)"], "all_classes": null, "length": 673}
{"pred": "       else {\n            TcpAddress.TcpAddressMask filterMask = new TcpAddress.TcpAddressMask(filterStr);\n            tcpAcceptFilters.add(filterMask);\n        }\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            else if (filterStr.length() == 0 || filterStr.length() > 255) {"], "all_classes": null, "length": 931}
{"pred": "               prior = curr;\n                curr = new byte[bytesPerRow];\n                continue;\n            }\n            return fout.ToArray();\n        }\n        \n        private void ReadPdf() {\n        }\n        \n        private void CheckAndSetNewXref() {\n", "answers": ["                fout.Write(curr, 0, curr.Length);"], "all_classes": null, "length": 6006}
{"pred": "       s = lowlevel.SignalMessage('/a/b/c', 'foo.bar', 'baz')\n        self.assertEqual(s.get_interface(), None)\n        self.assertFalse(s.has_interface('INetter'))\n        s.set_interface('IN", "answers": ["        s = lowlevel.SignalMessage('/a/b/c', 'foo.bar', 'baz')"], "all_classes": null, "length": 677}
{"pred": "       _file = open(filename, 'w+')\n        _file.write(output)\n        _file.close()\n        #which E_2_page gets the LOL?\n    def get_E_2_page_no_mat():\n        return self.get_", "answers": ["                except (KeyError, AttributeError):"], "all_classes": null, "length": 1017}
{"pred": "               \"1:1: Message type \\\"protobuf_unittest.TestAllTypes\\\" has no field \" +\n                \"named \\\"inheritedfield\\\".\",\n                \"inheritedfield: 123\");\n            AssertParseError(\n                \"1:1: Expected", "answers": ["                \"1:21: Expected \\\">\\\".\","], "all_classes": null, "length": 1187}
{"pred": "\t\treturn map.remove( key );\n}\n\npublic void queueOperation(Operation<T> operation) {\n}\n\npublic void setQueueEnabled(boolean enabled) {\n}\n\npublic boolean isPutQueueEnabled() {\n}\n\npublic void setCachedSize(int size", "answers": ["\t\treturn map.remove( key );"], "all_classes": null, "length": 794}
{"pred": "\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );\n\t\t\t}\n\t\t\tcatch {}\n\t\t}\n\t}\n}\n\n// Using directives\nusing Server.Accounting.Account;\nusing Server.Core.Base;\nusing", "answers": ["\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );"], "all_classes": null, "length": 805}
{"pred": "   return self.env.user.message_get(\n        'hr_attendance.hr_attendance_message_check_in_kiosk_mode')\n    or self.env.user.message_get('hr_attendance.hr_attendance_message_check_", "answers": ["        return {'action': action_message}"], "all_classes": null, "length": 686}
{"pred": "\t\tgrdResultsRow parentRow = (grdResultsRow) grdResults.getRow(0);\n\t\tif (parentRow == null)\n\t\t\tparentRow = grdResults.getDefaultRow();\n\t\tif (parentRow == null)\n\t\t\tparent", "answers": ["\t\tif (orderInvestigationLiteVo == null)"], "all_classes": null, "length": 667}
{"pred": "pt = c.ReadStruct(0,typeof(POINT));\npt.X = (int)(pt.X * 1024);\npt.Y = (int)(pt.Y * 1024);\nc.Dispose();\nreturn pt;\n\n}", "answers": ["                pt = (POINT)c.ReadToStructure(0, typeof(POINT));"], "all_classes": null, "length": 808}
{"pred": "if display_manager() == 'X11':\n    try:\n        gi.require_version('Keybinder', '3.0')\n        from gi.repository import Keybinder\n        Keybinder.init()\n    except (ImportError, ValueError):\n        err(\"", "answers": ["        if not self.is_child_notebook():"], "all_classes": null, "length": 689}
{"pred": "           }\n            return toReturn;\n        }\n        private UnmanagedType GetMarshalAttribute( string typeFragment ) {\n            switch ( typeFragment.ToLower( InvariantCulture.CultureCulture ) ) {\n                case \"str\":\n                    return UnmanagedType.STRING;\n               ", "answers": ["                    string name = nameArraySizeFragments[0];"], "all_classes": null, "length": 1831}
{"pred": "\t\t\treturn base_type != null && base_type.IsTypeOf (\"System\", \"ValueType\"); }\n\t\t}\n\t\tpublic override Assembly Assembly {\n\t\t\tget {\nNext line of code:\n\t\t\treturn Module.GetAssembly (this); }\n\t", "answers": ["\t\t\t\tif (base_type == null)"], "all_classes": null, "length": 1469}
{"pred": "           throw new Exception(\"Could not find model: \" + args.Key);\n            }\n        }\n        #endcore\n    }\n}\n\nPlease help me complete the code.\n\nNote: I have already written the code for the `Decision` class, `Evidence`", "answers": ["                throw new Exception(\"Could not find model: \" + args.Key);"], "all_classes": null, "length": 578}
{"pred": "       self.context = OpenSSL.SSL.Context(protocol)\n        self.tls_version = OpenSSL.SSL.TLS_VER_1_2\n        self.ssl_version = OpenSSL.SSL.SSL_VER_3_1\n        self.cipher_list", "answers": ["        self.protocol = _openssl_versions[protocol]"], "all_classes": null, "length": 1264}
{"pred": "\t\t\tthis.togglebuttonMissing = new global::Gtk.ToggleButton ();\n\t\t\tthis.togglebuttonMissing.Name = \"togglebuttonMissing\";\n\t\t\tthis.togglebuttonMissing.Hilighted = false;\n\t\t\tthis.hbox3", "answers": ["\t\t\tthis.label8 = new global::Gtk.Label ();"], "all_classes": null, "length": 1086}
{"pred": "   notebooks[\"board\"].set_current_page(0)\n    headbook.set_current_page(0)\n    mainvbox.show_all()\n    widgets.window1.show_all()\n    widgets.window1.connect_and_key_", "answers": ["                for notebook in notebooks.values():"], "all_classes": null, "length": 1188}
{"pred": "   \"Move-Tab-to-left\": QKeySequence(Qt.SHIFT + Qt.Key_0),\n    \"Next-line\": QKeySequence(Qt.Key_PageDown),\n    \"Previous-line\": QKeySequence(Qt.Key_PageUp),\n", "answers": ["    \"Move-Tab-to-left\": QKeySequence(Qt.CTRL + Qt.SHIFT + Qt.Key_9),"], "all_classes": null, "length": 902}
{"pred": "\t\treturn super.toString();\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\tStringBuilder builder = new StringBuilder();"], "all_classes": null, "length": 538}
{"pred": " }\n  \n  protected void setFont(Font font)\n  {\n    super.setFont(font);\n    if (accessiblePart != null)\n      accessiblePart.setFont(font);\n  \n  }\n  \n  protected void setFontFontData(FontFont", "answers": ["    IWorkbench workbench = PlatformUI.getWorkbench();"], "all_classes": null, "length": 469}
{"pred": "\t\t\tthis.butAttach.DialogResult = System.Windows.Forms.DialogResult.NoResult;\n\t\t\tthis.butAttach.Location = new System.Drawing.Point(883, 656);\n\t\t\tthis.butAttach.Name =", "answers": ["\t\t\tthis.butAttach.Location = new System.Drawing.Point(738, 2);"], "all_classes": null, "length": 692}
{"pred": "       if (sb != null)\n        return sb.toString();\n        else\n        return string;\n        }\n    }\n    public static String encodeForHTML(String s)\n    {\n        return encode(s);\n    }\n    public static String encodeForXML(String s", "answers": ["        if (sb == null)"], "all_classes": null, "length": 627}
{"pred": "\t\t\tCheck (\"RFC4231_TC1_Legacy\", hmac, data, digest);\n\t\t\t// ... more tests ...\n\t\t\talgo.InputBlockSize = 100;\n\t\t\talgo.OutputBlockSize = 1", "answers": ["\t\t\tCheck (\"HMACSHA512-L-RFC4231-TC1\", hmac, data, digest);"], "all_classes": null, "length": 1867}
{"pred": "\t    switch(EnumSwitchUnion.m_d) {\n\t    \tint switch_value = 0; switch switch_value {\n\t\t    \tswitch switch_value {\n\t\t\t    \tswitch switch_value {\n\t\t\t\t    \tswitch switch_value {\n", "answers": ["\t    current_sum += 4 + CDRSerializer.alignment(current_sum, 4);"], "all_classes": null, "length": 737}
{"pred": "       return null;\n      else\n        return java.ToString();\n    }\n    private static String GetHKJREPath(String key)\n    {\n      RegistryKey regKey = Registry.LocalMachine.OpenSubKey(key);\n      if (regKey == null)", "answers": ["        java = regKey.OpenSubKey(\"1.6\");"], "all_classes": null, "length": 950}
{"pred": "   if job is None:\n        return None\n    return [l, l]\n    def _read_user_execute(self):\n        # read the user execute\n        try:\n        return 0\n        }\n        r, out, err = self.module.run_command", "answers": ["                comment = re.sub(r'%s' % self.ansible, '', l)"], "all_classes": null, "length": 1528}
{"pred": "if mesh.modifiers.get(modifier_name):\n    mesh.modifiers[modifier_name].to_json(modifier_json)\nelse:\n    mesh.modifiers.mesh_modifier = MeshModifierCommon.from_json(modifier_json)\n", "answers": ["        modifier.vertex_group = modifier_json['vertex_group']"], "all_classes": null, "length": 994}
{"pred": "   private static void createFieldsIndexMap(String[] lines, double[][] fields)\n\n    private static int peptideLengthFromIndex(int index)\n\n    private static int peptideLengthIndex(int peptideLength)\n\n    private static void buildAllelePept", "answers": ["            for(int i = 0; i < rankCounts.length; ++i)"], "all_classes": null, "length": 822}
{"pred": "   }\n    @Test\n    @DisplayName(\"neighbors() should return an empty list when the vertex is empty\")\n    void neighbors_empty() {\n        vertex.getNeighbor(3);\n        assertEmpty(neighbors);\n    }\n    private", "answers": ["        for (val n : vertex.neighbors()) {"], "all_classes": null, "length": 466}
{"pred": "   def parser(self, choice):\n        pass\n\n    #import pdb; pdb.debug(self)\n    #print(self.stack)\n    #print(self.stack_stack)\n    #print(self.stack_stack_stack)\n    #print(", "answers": ["                    self.choice = int(self.choice) - 1"], "all_classes": null, "length": 615}
{"pred": "           this.rptComboBox.Location = new System.Drawing.Point(91, 165);\n            this.rptComboBox.Name = \"rptComboBox\";\n            this.rptComboBox.Size = new System.Drawing.Size(264, 21);", "answers": ["            this.rptComboBox.Location = new System.Drawing.Point(92, 5);"], "all_classes": null, "length": 764}
{"pred": "\n    # Adding model 'NoteReferenceNS'\n    db.create_table(u'main_notereferencens', (\n        # fields\n        u'notesection_ptr', etc.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            'Meta': {'ordering': \"['ordering']\", 'object_name': 'Scan'},"], "all_classes": null, "length": 1056}
{"pred": "if (isImportProcessor()) {\nthrow SDOException.sdoTypeNotFound(targetNamespace, sdoTypeName);\n}\nreturn false;\n}\n        }\nreturn alreadyProcessed;\n    }\n    private void preprocessGlobalTypes(Schema rootSchema) {\n        // Pre", "answers": ["                QName qname = new QName(targetNamespace, sdoTypeName);"], "all_classes": null, "length": 1110}
{"pred": "       self.holidays_first_validate_notificate(cr, uid, ids, context=context)\n        return self.write(cr, uid, ids, {'state': 'validate', 'manager_id': manager})\n    def holidays_first_validate_not", "answers": ["        obj_emp = self.pool.get('hr.employee')"], "all_classes": null, "length": 1956}
{"pred": "           set { this.Enabled = value; }\n        }\n        #region IBOColSelector Members\n        IBOColSelector.IBOColSelectorControl _IBOColSelectorControl;\n        #enddoca\n        #endregion\n        protected void InitializeComponent()\n        {\n", "answers": ["            set { this.Enabled = value; }"], "all_classes": null, "length": 2288}
{"pred": "           return $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $", "answers": ["            return String.Format(\"{0} {1} ({2} controls, ID={3})\", "], "all_classes": null, "length": 672}
{"pred": "\t\t\tvalue10 = (ims.core.admin.domain.objects.CareContext) domainObject.getCareContext();\n\t\t\tif ( value10 == null) \n\t\t\t\tdomainObject.setCareContext( value10 = new ims.", "answers": ["\t\t\tif (valueObject.getCareContext().getBoId() == null)"], "all_classes": null, "length": 1991}
{"pred": "       env = self.build_env()\n        if android:\n            # Build OpenSSL for android\n            make_cmd = [\"make\"]\n            if jobs is not None:\n                make_cmd += [\"-j\" + jobs]\n            with cd(self.android_support_dir", "answers": ["            [\"cargo\", \"build\"] + opts,"], "all_classes": null, "length": 688}
{"pred": "\t\t\tdouble estN = counts[3];\n\t\t\tif (estP == 0 && estN == 0) {\n\t\t\t\t// No improvement, as the prediction is certain\n\t\t\t\treturn this.getScore(counts, true);\n\t\t\t", "answers": ["\t\t\tdouble estN = counts[3];"], "all_classes": null, "length": 1642}
{"pred": "               Stashed.SetStashDiffs(gitStash.Rev, gitStash.Rev, gitStash.Message, gitStash.StagedItems, gitStash.UnstagedItems);\n            }\n            Stashed.ClearDiffs();\n            Loading.", "answers": ["                var firstId = Module.RevParse(gitStash.Name + \"^\");"], "all_classes": null, "length": 671}
{"pred": "st_test_util.test_track_job(job)\nst_test_util.test_cbuffer_cmonitor(lattice.cbuffer)\nst_test_util.test_beam_elements(lattice.beam_monitors)\nst_test_", "answers": ["    assert lattice.cbuffer.get_object(bm1_index).out_address != 0"], "all_classes": null, "length": 594}
{"pred": "       if (o instanceof AuthScope) {\n            return match(new AuthScope(o);\n        }\n        return false;\n    }\n    }\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        if (o == this) {"], "all_classes": null, "length": 1028}
{"pred": "                       b}, callback, asyncState);\n        }\n        public int AddInt(int a, int b) {\n            return this.Invoke(\"AddInt\", new object[] {\n                        a,\n                        b});\n        }\n        public System.IAsyncResult BeginGetReturn", "answers": ["                        b}, callback, asyncState);"], "all_classes": null, "length": 1364}
{"pred": "\t\t\t\t} else {\n\t\t\t\t\ts += \"null\";\n\t\t\t\t}\n\t\t\t\tif (i != snrs.size() - 1) {\n\t\t\t\t\ts += \" - \";\n\t\t\t\t}\n\t\t\t", "answers": ["\t\t\t\t\tif (!(i == snrs.size() - 1)) {"], "all_classes": null, "length": 724}
{"pred": "\t\t\t\t\tEType = (EClassifier)value;\n\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tcase \"eGenericType\" : \nNext line of code:\n\t\t\t\t\tE", "answers": ["\t\t\t\t\tEType = (EClassifier)value;"], "all_classes": null, "length": 642}
{"pred": "eai = EncryptedArchiveIndex(path)\ntry:\n    eai.load()\n    log.info('cryptostasis', 'Successfully loaded archive index')\n\nBut I am getting an error:\nTypeError: cannot convert str to EncryptedArchiveIndex\n\nPlease", "answers": ["        log.log_strm = open(args.log_file, 'w')"], "all_classes": null, "length": 626}
{"pred": "   if mosi.bits.r0:\n        # Handle the response token\n        self.handle_response_r0(miso)\n    elif mosi.bits.r1:\n        # Handle the response token\n        self.handle_response_r1(miso)\n", "answers": ["        if ptype == 'BITS':"], "all_classes": null, "length": 1650}
{"pred": "1 line below\n1 line above\n\n        // (, line 202\n        // <-, line 203\n        slice_from(\"e\");\n        break;\n      case 2:\n        // (, line 206\n        // <-, line 2", "answers": ["          cursor = limit - v_3;"], "all_classes": null, "length": 3016}
{"pred": "               o = cls.getObject(dins);\n            } catch (IOException e) {\n                System.out.println(\"e: \"+e);\n            }\n            if (o != null) {\n                if (cd == null) {\n                    channelMap.put(channel", "answers": ["                if (cd == null) {"], "all_classes": null, "length": 583}
{"pred": "   - openssl_certificate_info:\n        path: /etc/ssl/crt/ansible.com.crt\n        privatekey_path: /etc/ssl/private/ansible.com.pem\n        crl_cert_path: /etc/ssl/", "answers": ["                return sorted(result), bool(extension.get_critical())"], "all_classes": null, "length": 2179}
{"pred": "if (i->first.connectable())\n    i->first.connect (c);\nif (still_there)\n    i = s.erase (i);\nelse\n    i = s.iterate (i);\nif (i != s.end())\n    i =", "answers": ["\t\t\t\tstill_there = _slots.find (i->first) != _slots.end ();"], "all_classes": null, "length": 1211}
{"pred": "   if X.begin >= 0x10000:\n        # ...\n        pass\n    else:\n        # ...\n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    front_seq = unicode_to_utf16(X.begin)"], "all_classes": null, "length": 1192}
{"pred": "\t\t}\n\t\telse SemErr(\"wrong type\");\n\t\tExpect(20);\n\t\tif (errors.count == 0) {\n\t\t  Console.WriteLine(\"checking\");\n\t\t  tab.CompAttrSets();\n\t\t  if (", "answers": ["\t\t\tint beg = la.pos; int col = la.col;"], "all_classes": null, "length": 1264}
{"pred": "           edi_doc.update({\n                # force trans-typing to purchase.order.line\n                '__import_module'] = 'purchase',\n                'date_planned': False, # ignore web preview date_planned field\n                'product_uom_qty", "answers": ["            edi_doc['product_qty'] = line.product_uom_qty"], "all_classes": null, "length": 813}
{"pred": "\t\tHashtable<String, String> serviceProperties = new Hashtable<String, String>();\n\t\tserviceProperties.put(\"uri\", REST_SERVLET_ALIAS);\n\t\treturn new ServiceDescription(\"_openhab-server._tcp.local.\", \"openH", "answers": ["    \tServiceDescription description = getDefaultServiceDescription();"], "all_classes": null, "length": 603}
{"pred": "               permissions = new List[0];\n                nameMap.put(name, permissions);\n            }\n            permissions.add(permissionEntry);\n        }\n        return nameMap;\n    }\n    private void assertEquals(String[] expectedEntries, String[] actualEntries)\n   ", "answers": ["                permissions = new ArrayList<>();"], "all_classes": null, "length": 897}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            subsystem='input', ID_INPUT_MOUSE=True, sys_name='mouse0'))"], "all_classes": null, "length": 769}
{"pred": "   d = Device(deviceToken)\n    u = User(d.app, loginId, password)\n    u.login()\n    print(u.mainmenu())\n    # ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...", "answers": ["    device = Device(token=deviceToken)"], "all_classes": null, "length": 478}
{"pred": "```\nimport os\nimport shutil\n\ndsets = [\"d0101000000000000000000000000000000000000000000000", "answers": ["        elif (index_elements[0] == \"Scatter\"):"], "all_classes": null, "length": 1818}
{"pred": "}\n        public override void Update(Mobile m, int loc)\n        {\n            if (m != null)\n                Add(m.GetItem(ICode.INVENTION_ITEM_1_KEY));\n            }\n        }\n        public override void CleanUp(", "answers": ["            if (Keys.Count < 1)"], "all_classes": null, "length": 549}
{"pred": "       for (String devNm : devices) {\n            // Check if device is already in the list\n            Tuner tuner = tuners.get(devNm);\n            if (tuner != null && tuner.liveDevice == true) {\n                // If it's", "answers": ["        for (String device : devices) {"], "all_classes": null, "length": 1943}
{"pred": "   if (lastSeenVersion < Version.USER_NOTIFICATION) {\n      jobs.put(Version.USER_NOTIFICATION, new UserNotificationMigrationJob());\n    }\n    if (lastSeonVersion < Version.DAY_BY_DAY_STICKERS)", "answers": ["    if (lastSeenVersion < Version.USER_NOTIFICATION) {"], "all_classes": null, "length": 1057}
{"pred": "     if (split.length == 3) { // ignore leading and trailing ' '\n          // Check if the entry is already in the list\n          if (entries.contains(new Entry(split[1].split(\" \"), split[2)), ignoreCase)) {\n              // If not, add", "answers": ["      if (split.length < 2 || split.length > 4)"], "all_classes": null, "length": 1566}
{"pred": "       if sub_path:\n            # try to find the file in the current directory\n            try_names = try_names + [n + sub_path]\n            for n in try_names:\n                # try to find the file in the current directory\n                try scanning the file\n", "answers": ["            i = SCons.Node.FS.find_file(n, (source_dir,) + sub_path[0])"], "all_classes": null, "length": 1329}
{"pred": "   from mapnik import Coord\n    from mapnik.expression import Expression\n    from mapnik.projection import Projection\n    from mapnik.utm import UTM\n    from mapnik.util import geo_distance\n    from mapnik.vector import Vector\n    from mapnik", "answers": ["        ctx = Context()"], "all_classes": null, "length": 2860}
{"pred": "   if sys.platform == 'win':\n    # ...\n    elif sys.platform == 'linux':\n    # ...\n    # ...\n    pass\n\nNote: This is a auto-generated code, you may need to modify it to fit your specific use case.\n\n according to the", "answers": ["        if self.want.destination != self.have.destination:"], "all_classes": null, "length": 1555}
{"pred": "   # ... more code ...\n\nStarting point:\n    # ... starting point ...\n\nNote:\n    * This is a complex view, with many inputs and nested views.\n    * The `MethodAddView` view is a nested view within the `MethodExplorerView`, and it has", "answers": ["    cancel_button = Button('Cancel')"], "all_classes": null, "length": 628}
{"pred": "           throw new Exception(\"Missing required parameter: \" + className);\n            }\n        return result;\n    }\n    public IEventPublisher[] getEventPublishers() {\n        return null;\n    }\n    public void addEventListener(IEventSubscriber owner) {", "answers": ["            notifyListeners(new EventObject(this), EventStatusType.ERROR,"], "all_classes": null, "length": 740}
{"pred": "           {\"thread_id\": \"dummy\", \"user_id\": str(self.student.id, unicode(self.course_id\")),\n            {\"body\": \"foo\", \"title\": \" \"},\n            mock_request\n        )\n    def test_update_thread_empty", "answers": ["            {\"thread_id\": \"dummy\", \"course_id\": unicode(self.course_id)},"], "all_classes": null, "length": 1297}
{"pred": "       embedManifestDllAction(target, source, env)\n        return 0\n    return 1\n    # This is the check for the manifest file.\n    # If the manifest file is not present, then the\n    #  embedded manifest is not required.\n    #  If", "answers": ["            ret = (embedManifestDllAction) ([target[0]],None,env)        "], "all_classes": null, "length": 917}
{"pred": "       execute(getSelectedResources(), new ProgressMonitorWrapper(new ProgressMonitor(shell, \n        Messages.WB_NAVIGATOR_ACTION_PROGRESS_MONGER_SLEEP_INTERVAL_MILISECONDS, \n        Messages.W", "answers": ["            WorkspaceModifyOperation op = new WorkspaceModifyOperation() {"], "all_classes": null, "length": 1208}
{"pred": "\t\tif (readObject(smi, sdi, true))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Trans is null, or the stream is", "answers": ["\t\tif (super.init(smi, sdi))"], "all_classes": null, "length": 521}
{"pred": "   assert f('12:30..-5', last) == (d(2014,1,31, 12,30), d(2014,1,31, 19,47))\n    # ...\n    assert f('", "answers": ["    assert f('+5..', last) == (d(2014,1,30, 22,21), now)"], "all_classes": null, "length": 1349}
{"pred": "               if (fakespawnsA.Length > 0)\n                    AddSpawn(x, y, z, map, fakespawnsA[0], fakespawnsB[0], fakespawnsC[0], fakespawnsD", "answers": ["            else if (smaxtime.Contains(\"h\"))"], "all_classes": null, "length": 1478}
{"pred": "       s, o = self._session_cmd_close(session, suspend_log_chk_cmd)\n        if s:\n            raise exceptions.TestError(\"Guest system log is not expected.\")\n        # Verify guest system log\n        s, o = self.verify_gu", "answers": ["        s, o = self._session_cmd_close(session, suspend_log_chk_cmd)"], "all_classes": null, "length": 1232}
{"pred": "       rc.getUninterruptedly();\n        service.shutdown();\n        service.awaitTermination(30, TimeUnit.SEC);\n        // Ignore the result as it's not necessary\n        // assertThat(rc.get(), is(2));\n       ", "answers": ["        final Future<Boolean> pubf = service.submit(pub);"], "all_classes": null, "length": 471}
{"pred": "           if (this.owner.getDecorator() instanceof FTDecorator) {\n            \t((FTDecorator) this.owner.getDecorator()).setOnSendRequestAfterParameters(res, destination);\n            }\n            this.owner.getDecorator().on", "answers": ["            if (this.owner.getDecorator() instanceof FTDecorator) {"], "all_classes": null, "length": 1423}
{"pred": "\t\t\treturn (uint)((int)value * 0x00000000000000010 >> 23);\n}\n}\n```\nThe code is a part of the `MakeEverythingPublic` task, which is part of the", "answers": ["\t\t\tif (value <= 0x7F)"], "all_classes": null, "length": 701}
{"pred": "   refresh()\n    au_run = au.AuRun(au_flags, refresh=refresh())\n    au_run.run()\n    cwd.load_content()\n    self.fm.env.cwd = cwd\n    self.fm.env.copy.clear", "answers": ["        obj = CommandLoader(args=['aunpack'] + au_flags \\"], "all_classes": null, "length": 3874}
{"pred": "\t\tpublic void CreateInstance_StringTypeName ()\n\t\t{\n\t\t}\n\t}\n}\n// Error: The value of the constant is too large for the maximum value of the enum range.\n//\n// The constant is of the type 'int' and has a value of ", "answers": ["\t\t[ExpectedException (typeof (ArgumentNullException))]"], "all_classes": null, "length": 740}
{"pred": "       repo = self. _setup(da, Action.ACCEPTED, Action.PENDING)\n        self.assertEqual(repo.changesets.count(), 2)\n        avs = AppVersion.objects.all()\n        flagdata = flags4appversions(avs", "answers": ["        de = Locale.objects.get(code='de')"], "all_classes": null, "length": 668}
{"pred": "           self.Log.debug(\"Setting user state\")\n            self.send_message(PYMUMBLE_MSG_TYPES_USERSTATE, userstate)\n            cmd.response = True\n            self.commands.answer(cmd)\n            }\n            }\n            }", "answers": ["                userstate.texture = cmd.parameters[\"texture\"]"], "all_classes": null, "length": 1807}
{"pred": "   }\n}\n\nThis code is a part of Aion-Lightning, and it provides a way to manage player groups and their members, as well as handle various events related to group-related game mechanics.\n\nThe code is written in Java and uses various classes and utilities from the A", "answers": ["        PlayerGroup group = player.getPlayerGroup2();"], "all_classes": null, "length": 799}
{"pred": "   def highlight(self, toks, formatter=None, outfile=None):\n        formatter = formatter or Formats.get(conf.UI.formatter)\n        outfile = outfile or StringIO()\n        formatter.format(toks, outfile)\n", "answers": ["        r = [head]"], "all_classes": null, "length": 734}
{"pred": "       column, tree_model, tree_iter = self._setup_column(1, False)\n        tree_model.add_map(tree_iter, self._create_store_map(1, False, 15, 2))\n        column.quantity_renderer.set", "answers": ["        column, tree_model, tree_iter = self._setup_column(1, False)"], "all_classes": null, "length": 630}
{"pred": "\t    if (parent != null) {\n\t        parent.set(parent.getKey(), bean);\n\t    }\n\t}\n\twhile (parent != null);\n\treturn super.doStartTag();\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t    if (parent instanceof Grid) {"], "all_classes": null, "length": 1452}
{"pred": "           }\n            catch (Exception ex) {\n                throw new Exception(\"Error loading creature \" + GUID + \" from XML file: \" + ex.Message);\n            }\n        }\n        private void ParseStatus(InventoryEntry inv, string stat)\n        {\n            switch (stat", "answers": ["                XmlNodeList dnl = element.SelectNodes(\"Dialog\");"], "all_classes": null, "length": 667}
{"pred": "                   m_key[i] = new ExodusActivation();\n                    //m_key[i] = new ParoxysmusActivation();\n                    //m_key[i] = new ShimmeringEffusionActivation();\n                    //m_key[", "answers": ["                        m_key[i] = new ExodusTomeAltar();"], "all_classes": null, "length": 1143}
{"pred": "\t\tfor (int i = 0; i < beans.length; i++)\n\t\t\tcoll.add(beans[i]);\n\t\treturn coll;\n\t}\n\tpublic static ChangeOfServiceVoCollection buildFromObjectField(ims.domain.Object ident, String field", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 755}
{"pred": "        new Version(1,  // 1 Ct = 0x07C94\n                   new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, // Alignment pattern centres\n", "answers": ["                new Version(1, new int[]{},"], "all_classes": null, "length": 994}
{"pred": "\t\t\tkdf.GenerateKey(MemUtil.EmptyByteArray, 0);\n\t\t\tif(!MemUtil.ArraysEqual(kdf.Key, pExc))\n\t\t\t\tthrow new SecurityException(\"Argon2d\");\n\t\t\tkdf.", "answers": ["\t\t\tbyte[] pb = kdf.Transform(pbMsg, p);"], "all_classes": null, "length": 2072}
{"pred": "\t\treturn dispatchManaExact(stack, player, cost, remove);\n\t}\n\tpublic static int getFullDiscountForTools(EntityPlayer player) {\n\t\treturn 0;\n}\n}\n```\nNote: The code is quite complex and it's not easy", "answers": ["\t\treturn requestManaExact(stack, player, cost, remove);"], "all_classes": null, "length": 1100}
{"pred": "   # Initialize the application\n    django.application.application_instance.INSTANCE = None\n    # Initialize the Django application\n    django.django_agfk.app_settings.SETTINGS_SETTINGS = config.SETTINGS_SETTINGS\n    django", "answers": ["if DEBUG and len(sys.argv) > 1:"], "all_classes": null, "length": 684}
{"pred": "\t\t\t\t\t\t\"but NextFrame has {1} LEDs\"),\n\t\t\t\t\tLightCount, NextFrame.PixelCount);\n\t\t\tlock (OutputQueue) {\n\t\t\t\tOutputQueue.Enqueue (NextFrame);\n\t\t\t\t// Update the", "answers": ["\t\t\t\t\t\t\" expected {1})\", NextFrame.PixelCount, LightCount"], "all_classes": null, "length": 821}
{"pred": "       if ((this.userErrorMessage == null)) {\n            if ((other.userErrorMessage != null))\n                return false;\n        } else if ((!this.userErrorMessage.equals(other.userErrorMessage)))\n            return false;\n        if ((this.actionTraceList", "answers": ["        if ((this.userErrorMessage == null)) {"], "all_classes": null, "length": 813}
{"pred": "\n            dc.number = p.readString();\n            dc.comfac = p.readInt();\n            dc.cacc = p.readInt();\n            response.add(dc);\n        }\n        return response;\n    }\n    @Override\n    protected", "answers": ["            dc.index = p.readInt();"], "all_classes": null, "length": 1196}
{"pred": "\t\t\t\t\tif (licence.isApplication()) {\n\t\t\t\t\t\trelevantLicences.add(licence);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// nothing to select\n", "answers": ["\t\t\t\t\t\tif (licence.isDomainSoftware()) {"], "all_classes": null, "length": 679}
{"pred": "           for (int x = 0; x < xSizeP; x++)\n            {\n                // Vertices\n                Vector3 v = new Vertices.Vertices(x, y, 0);\n                newVertices[x * ySizeP + y] = v;\n               ", "answers": ["            for (int x = 0; x < xSizeP; x++)"], "all_classes": null, "length": 1083}
{"pred": "\t\t\t\n\t\t\tclient.add(API_METHOD_ADD, new Object[] {testInt1});\n\t\t\t\n\t\t\trawResult = client.getResult();\n\t\t\t\n\t\t\tif (rawResult != null)\n\t\t\t{\n", "answers": ["\t\t\tint testInt2 = rand.nextInt(5000);"], "all_classes": null, "length": 845}
{"pred": "\t\t\treturn null;\n\t\t\t}\n\t\t\t@Nonnull\n\t\t\tpublic int[] getBlockSelectionEnds()\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tpublic void setContentKept(final boolean content", "answers": ["\t\t\t\treturn new int[0];"], "all_classes": null, "length": 431}
{"pred": "           out.writeBoolean(false);\n            out.writeUTF(\"Not found\");\n        }\n        else\n            try {\n                out.writeBoolean(true);\n                out.writeObject(findObject(name));\n            }\n            catch (NotSerializableException e) {\n", "answers": ["            logging2(name + \"not found.\");"], "all_classes": null, "length": 745}
{"pred": "\n    }\n    public static void stactics_draw_console_control() {\n    }\n    public static void stactics_draw_score_display() {\n    }\n    public static void stactics_draw_credits_indicator() {\n    }\n   ", "answers": ["                        16 + (~stactics_display_buffer.read(i) & 0x0f),"], "all_classes": null, "length": 2896}
{"pred": "                                   .Distance(spell.RangeCheckFrom.To2D())\n                                    <= spell.Range &&\n                                    (spell.RangeCheckFrom.To2D().IsValid() ||\n                                    (minionPrediction.CastPosition.To2D().Is", "answers": ["                                        .Distance(spell.From.To2D(), position.To2D(), true, true) <="], "all_classes": null, "length": 1895}
{"pred": "       return graph.induces(x, y);\n    }\n    public static void main(String[] args) {\n        // Create a new DagToPag object.\n        DagToPag d2p = new DagToPag(new Graph());\n\n        //", "answers": ["        final LinkedList<Node> path = new LinkedList<>();"], "all_classes": null, "length": 1093}
{"pred": "                   if (i == 0)\n                        plcs.Push(pop.Parent);\n                    else\n                        plcs.Push(pop.Parent.Parent);\n                }\n                if (pop.Parent != null)\n                    plcs.Push(pop.Parent);", "answers": ["                    if (pop[i] is PlaceBase)"], "all_classes": null, "length": 756}
{"pred": "       if (attachmentFile == null && other.attachmentFile != null) {\n            return false;\n        }\n        if (fileId == null && other.fileId != null) {\n            return false;\n        }\n        return super.matches(other);\n    }\n", "answers": ["        else if (!this.getFileId().equals(other.getFileId())) {"], "all_classes": null, "length": 677}
{"pred": "                   AOS.Damage(mobiles[i], from, GetDamage(), 0, 100, 0, 0, 0);\n                    }\n                }\n                public void Stop()\n                {\n                }\n            }\n            public", "answers": ["                        Mobile m = mobiles[i];"], "all_classes": null, "length": 864}
{"pred": "\t\t\t\tvar old = History.Old(msg.Time);\n\t\t\t\tif (old != null)\n\t\t\t\t{\n\t\t\t\t\tMessageTo(user, old.User, old.Text);\n\t\t\t\t}\n\t\t\t\tif (", "answers": ["\t\t\t\twhile (HistoryCount >= WorldChat.CMOptions.HistoryBuffer)"], "all_classes": null, "length": 964}
{"pred": " }\n  public void setMock(OrganizationController mock) {\nmock.setOrganizationController(this);\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    return mock.getAvailCompoIds(sClientSpaceId, sUserId);"], "all_classes": null, "length": 882}
{"pred": "                           files[++index] = (String) mListView.getItemAtPosition(key);\n                        }\n                    }\n                    ZipFilesDialog.instantiate(files);\n                    mode.finish();\n                    return true;\n                }\n            }\n", "answers": ["                            files[++index] = (String) mListView.getItemAtPosition(key);"], "all_classes": null, "length": 526}
{"pred": "       this.j.writeLock().lock();\n        try {\n            this.i.add(new NetworkManager.QueuedPacket(packet, (GenericFutureListener[]) null));\n        } finally {\n        }\n        }\n    }\n    public void b(PacketListener", "answers": ["        if (this.m instanceof IUpdatePlayerListBox) {"], "all_classes": null, "length": 598}
{"pred": "\n    #    z_arr[p_index, 0], z_err_arr[p_index, 0] = z_dict[z_key][f'{per[0]}' + per.str(1)]\n    #    z_arr[p_index,", "answers": ["                ll = z_index_dict[z_key][1]"], "all_classes": null, "length": 3693}
{"pred": "if (name.length() > 0) return getResource(context, resourceOne, name);\nreturn getResource(context, resourceTwo, \"\");\n}\nelse {\nreturn getResource(context, resourceMany, Integer.numberOfElements(recipients));\n}\n\n}\n", "answers": ["      return context.getString(resourceOne, name);"], "all_classes": null, "length": 625}
{"pred": "env.setdefault(\"RUST_BIN\", extra_path)\nenv.setdefault(\"RUST_LIB\", extra_lib)\nif gonk:\n    # Gonk is a special case, since it's not a rust cargo tool\n    # but rather a rust cargo-", "answers": ["            env[\"PATH\"] = \"%s%s%s\" % ("], "all_classes": null, "length": 635}
{"pred": "   source_files[tests_root.rel_path] = source_file\n    return source_files\n\nimport os\n\ntests_root = os.environ['TESTS_ROOT'\n\nargs = (tests_root, os.environ['URL_BASE'], rel_path, status", "answers": ["            for path, manifest_tests in iteritems(type_paths):"], "all_classes": null, "length": 530}
{"pred": "if (compileTimeStrategy.canUseOldCompiledScript()) {\n\tscriptClassLoader.setSecurityManager(null);\n\t// :fixme: What is the purpose of setting the security manager to null?\n\t//  It seems that the security manager is not necessary\n\t//  for the old", "answers": ["        if (compiledScript != null) {"], "all_classes": null, "length": 651}
{"pred": "           }\n        }\n        public class WrappedNetworkLayer<T, R> : BaseNetworkLayer<T, R>\n        {\n            private WrapperServerDataAdapter _serverDataAdapter;\n            private WrapperClientDataAdapter _clientDataAdapter;\n            public WrappedNetwork", "answers": ["            throw new NotSupportedException();"], "all_classes": null, "length": 659}
{"pred": "     for i in range(energy.size):\n        Etf = energy[i]\n        grad_Etf = grad[i].flatten()\n        grad_E = Etf*grad_var+energy_var*grad_Etf+grad_means\n        grad_E", "answers": ["      for i in range(energy.size):"], "all_classes": null, "length": 874}
{"pred": "\t\tif (this.isValidated())\n\t\t\treturn compareColllectionElements(this.ordinvstatushistory, castobj.ordinvstatushistory, caseInsensitive); -1;\n\t\telse\n\t\t\treturn compareColllectionElements(this.ordinvcurrent", "answers": ["\t\tif(caseInsensitive); // this is to avoid eclipse warning only."], "all_classes": null, "length": 664}
{"pred": "assertEquals(found.size(), STACKS_SIZE * 2);\nassertTrue(findTag(find(found, \"search-tag1\"), \"search-tag2\"));\nassertTrue(findTag(find(found, \"search-tag2\"), \"search-tag1\"));\n\n", "answers": ["        for (StackImpl stack : stacks) {"], "all_classes": null, "length": 498}
{"pred": "       crawlParameters.add(new Parameter(CRAWLER_DEPTH_PARAM_KEY, depth));\n\n        //EXCLUSION REGEX\nNext line of code:\n        crawlParameters.add(new Parameter(CRAWLER_EXCLUS", "answers": ["        ParameterElement ped = new ParameterElementImpl();"], "all_classes": null, "length": 593}
{"pred": "\t\t\tswitch (kind)\n\t\t\t{\n\t\t\t\tcase LKind.Array:\n\t\t\t\t\t// ...\n\t\t\t\t\tbreak;\n\t\t\t\tcase LKind.Object:\n\t\t\t\t\t// ...\n\t\t\t\t\t", "answers": ["\t\t\tif (kind == LNodeKind.Id && candidate.Name != pattern.Name)"], "all_classes": null, "length": 1713}
{"pred": "           }\n            }\n            if (harcs:Include)\n        }\n        public void Ultimate()\n        {\n        }\n    }\n}\n\nThis is a class that is derived from the EloBuddy class, and it has a number of functions that are related", "answers": ["                    if (colisionList.Count > extendedWillHit)"], "all_classes": null, "length": 603}
{"pred": "\t\tcontextMenu = new ContextMenuLite(getContextMenu());\n\t\tMenuChoice = new MenuChoice();\n\t\tMenuChoice.setContext(context);\n\t\tMenuChoice.setForm(form);\n\t\tMenuChoice.setControl(control);\n\t\tMenuChoice.", "answers": ["\t\tcontextMenus = new ContextMenus();"], "all_classes": null, "length": 1735}
{"pred": "   for line in frozen_output:\n        if pattern in line:\n        #print(line)\n        return True\n    return False\n\n # Install the prereqs\n # Install the node prereqs\n # Install the python prereqs\n # Uninstall the unw", "answers": ["    return bool(re.search(pattern, frozen_output))"], "all_classes": null, "length": 1046}
{"pred": "\n    def test_m2m_m2o_m2m(self):\n        r = self.env['test_testing_utilities.g'].create({\n            'm2m': [(6, 0, self.env.ref('test_testing_utilities.", "answers": ["            'subs': [(0, 0, {})]"], "all_classes": null, "length": 1031}
{"pred": "   assert simplify(Sum(x, (x, 0, 10)) + 2 * Sum(x, (x, 11, 12))) == 0\n    assert simplify(Sum(x, (x, 0, 10)) + 2 * Sum", "answers": ["    b, v = symbols('b, v', integer = True)"], "all_classes": null, "length": 4519}
{"pred": "\t\t\tint argc = LuaDLL.lua_gettop(l);\n\t\t\tif(argc==1){\n\t\t\t\tSystem.String a1;\n\t\t\t\tcheckType(l,1,out a1);\n\t\t\t\tvar ret", "answers": ["\t\t\tint argc = LuaDLL.lua_gettop(l);"], "all_classes": null, "length": 427}
{"pred": "           }\n            else\n            {\nthrow new ArgumentException(\"Wrong Action For Ctor\", \"action\");\n}\n        private void InitializeMoveOrReplace(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int newStartingIndex, int oldStartingIndex)", "answers": ["                this.InitializeAdd(action, changedItems, startingIndex);"], "all_classes": null, "length": 756}
{"pred": "           StringReader reader = new StringReader(writer.toString());\n            InputSource inputSource = new InputSource(reader);\n            // ...\n            // ...\n            // ...\n            reader.close();\n            inputSource.close();\n            // ...\n            // ...\n            // ...\n", "answers": ["            int sizeAfter = getNamespaceResolverSize(desc);"], "all_classes": null, "length": 1329}
{"pred": "               c.Campus = Token2Csv();\n                break;\n                }\n            }\n        private string Token2Csv(object vv = null)\n        {\n            switch (Token.Type)\n            {\n                case TokenType.String:\n                    return Token", "answers": ["                    c.Campus = Token2Csv();"], "all_classes": null, "length": 714}
{"pred": "Console.WriteLine (\"width: {0}\", ide.width);\nConsole.WriteLine (\"height: {0}\", ide.height);\nConsole.WriteLine (\"colorCount: {0}\", ide.colorCount);\nConsole.WriteLine (\"reserved: {0}\", ide.reserved);\nConsole.WriteLine (\"", "answers": ["Console.WriteLine (\"\\tide.width: {0}\", ide.width);"], "all_classes": null, "length": 2756}
{"pred": "\nif (l.inSubroutine(id)) {\n// ...\n}\n\nStackOverflow:\nstack = l.next;\n}\n}\n    }\n    // ------------------------------------------------------------------------\n    // Methods for handling stack frames\n    // ---------------------------------Stack frames", "answers": ["                if ((l.status & VISITED2) != 0) {"], "all_classes": null, "length": 3107}
{"pred": "           ptr_of_this_method = ILIntepreter.GetObjectAndResolveReference(ptr_of_this_method);\n            UnityEngine.Ray instance_of_this_method = (UnityEngine.Ray)typeof(UnityEngine.Ray).CheckCL", "answers": ["            ptr_of_this_method = ILIntepreter.Minus(__esp, 1);"], "all_classes": null, "length": 599}
{"pred": "\t\t\tlblLabelPosition.setText(\"Label Position: \" + position.getLabelPosition());\n\t\t\tcomboLabelPosition.setSelection(position.getLabelPosition());\n\t\t\tbtnShowLables.setSelection(position.getLabelPosition());\n\t\t}\n\t\t\n", "answers": ["\t\t\tif(position == Position.INSIDE_LITERAL) {"], "all_classes": null, "length": 620}
{"pred": "       currImageValue = self._getCurrentValue( driver, \"Image\" )\n        print \"Check decrease image...\"\n        print \"oldImageValue=\", lastImageValue, \"newImageValue=\", currImageValue\n        self.assertEqual( int(currImageValue), int(lastImage", "answers": ["        currImageValue = self._getCurrentValue( driver, \"Image\")"], "all_classes": null, "length": 3277}
{"pred": "   }\n    K = pow(G, x, P)\n    E = pow(G, x, P)\n    F = pow(G, x, P)\n    K_H = SHA1(hm).digest()\n    K_H = K_H[0", "answers": ["        if (self.f < 1) or (self.f > self.p - 1):"], "all_classes": null, "length": 1912}
{"pred": "       }\n        // Check if the overall node name is null or feature class node\n        if (overallNodeName != null) {\n            // Get the feature class node\n            DatabaseFeatureClassNode featureClassNode =\n                new DatabaseFeatureClassNode(this.handler, connectionData, overallNode", "answers": ["            if (disableTreeSelection) {"], "all_classes": null, "length": 908}
{"pred": "           self.cr.fetchone()[0)\n            return res or 0.0\n        class Contract(BrowsableObject):\n\"\"\"            \"\"\"a class that will be used into the python code, mainly for usability purposes\"\"\"\n\"\"\"            def _sum_salary", "answers": ["                           (self.employee_id, from_date, to_date, code))"], "all_classes": null, "length": 836}
{"pred": "   cl1h, cl2h, cl = integrate_kkhalo(ell, lnzarr, chiarr, dVdzdOm, marr, mf, BDarr, rhobarr, rho_crit_arr, bias, Darr, pk, zs", "answers": ["        if config.MF =='Tinker':"], "all_classes": null, "length": 1377}
{"pred": "       d.width = font.getWidth(\"W\");\n        d.height = font.getHeight();\n        return d;\n    }\n    \n    @Override\n    protected void setFont(Font font) {\n        super.setFont(font);\n        if (font != null", "answers": ["        if (font == null) {"], "all_classes": null, "length": 924}
{"pred": "   if flag=='off_center':\n        self.cal_p2(ref_p=None,phi=phi,flag=flag)\n        self.share_face_init(flag)\n        \n    else:\n        self.cal_p2(ref_p=anchor", "answers": ["        for theta in np.arange(0,np.pi,theta_res):"], "all_classes": null, "length": 800}
{"pred": "\t\t\twindow.Show();\n\t\t}\n\t}\n}\n\nI have the solution in C# but I need to convert it to Csharp-Rithmic.\nPlease help me to convert the solution to Csharp-Rithmic.\n\nI have the solution in C#", "answers": ["\t\t\tif (window.Visibility == Visibility.Visible)"], "all_classes": null, "length": 471}
{"pred": "       self.SetBinContent(0, 0, 0)\n        self.SetBinError(0, 0, 0)\n        self.SetBinLow(0, 0, 0)\n        self.SetBinHigh(0, 0", "answers": ["                        for n in xrange(params[0]['nbins'] + 1)]"], "all_classes": null, "length": 2054}
{"pred": "       connection.getXmpp().getStorage().updateFirstServerMsgId(contact);\n        }\n    }\n    public void removeQuery(Query query) {\n        synchronized (quires) {\n            queries.remove(query);\n        }\n    }\n    public void remove", "answers": ["            if (contact.setLastMessageTransmitted(query.getEnd())) {"], "all_classes": null, "length": 630}
{"pred": "       im1L = im1.convert(\"L\", rgb2I)\n        h1 = h0.histogram(im1L)\n        # compute transform\n        transform = h0.transform(h1, scale)\n        # apply transform\n        im1 = transform.", "answers": ["                im1L = im1.convert(\"L\", rgb2I)"], "all_classes": null, "length": 756}
{"pred": "\t\t\twhile (rf.isOkey()) {\n\t\t\trsp = rf.readRecord(sfi);\n\t\t\tif (rsp.isOkey())\n\t\t\taddLog24(rsp, ret);\n\t\t\t}\n\t\t\t", "answers": ["\t\t\tfor (int i = 1; i <= MAX_LOG; ++i) {"], "all_classes": null, "length": 702}
{"pred": "           yield textHandler(UInt16(self, \"filename\", \"Filename\"), filename)\n            yield textHandler(UInt16(self, \"filename_size\", \"Size of the filename\"), filesizeHandler(UInt16(self, \"filename_size\")))\n           ", "answers": ["            return \"Block: %s\" % self[\"type\"].display"], "all_classes": null, "length": 952}
{"pred": "\t}\n}\n\nNote: The above code is a sample implementation of the TL1LanguageEngine interface, and it may not be the complete or exact implementation of the entire interface.\n\nPlease help me understand what the code is doing and what are the possible issues with the code.\n\nAlso,", "answers": ["\t\tif (socketAdapter != null) {"], "all_classes": null, "length": 1211}
{"pred": "\n    server = wsgi.Server(bind_addr, d)\n    server.start()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        path = environ['PATH_INFO'] or '/'"], "all_classes": null, "length": 1313}
{"pred": "\t\tmodel = Model()\n\t\tmodel.loadmodel( arg1)\n\t\tmodel.entropyvalues , model.sizevalues = model.entropy( arg2, arg3)\n\t\tmodel.bicvalues , model.probs = model.bic_score( arg", "answers": ["\t\tdatasetfile , field , parents = sys.argv[ 1: ]"], "all_classes": null, "length": 1784}
{"pred": "while (chance > 0)\n{\n    // check if the item is special\n    if (IsSpecial(item, craftSystem))\n        // check if the item is a clockwork leg\n        if (item is ClockworkLeggings)\n        {\n            // check if", "answers": ["            int random = Utility.Random(100);"], "all_classes": null, "length": 976}
{"pred": "           return rdtl.UserEnum(entry_name, entry_value, displayname, desc, type_name)\n        raise ValueError\n    #---------------------------------------------------------------------------\n    def parse_integer(self, s: str) -> int:\n        # Check for integer value\n", "answers": ["            entries[entry_name] = (entry_value, displayname, desc)"], "all_classes": null, "length": 2406}
{"pred": "               MessageBox.Show(\"No FOG Modules have been installed\");\n                this.Close();\n            }\n            }\n            else\n            {\n                MessageBox.Show(\"AppDomain.CurrentDomain.BaseDirectory is null\");\n                this.Close();\n            }\n        }\n", "answers": ["                    Label noneFound = new Label();"], "all_classes": null, "length": 451}
{"pred": "               return (bool)this.ViewState[\"SubmitText\"];\n            }\n            set\n            {\n                this.ViewState[\"SubmitText\"] = value;\n            }\n        }\n        private void AfterStoreAdd(object arg)\n        {\n            this.Controls.AddAt(", "answers": ["                object obj = this.ViewState[\"SubmitText\"];"], "all_classes": null, "length": 1411}
{"pred": "               for(int tri = 0, vi = 0, ci = 0, ti = 0; tri < this.trianglesUsed[textureHash]; tri++)\ncheat\n                beginTriangle(this.textureArray[textureHash]);\n                if(this.", "answers": ["                int ti = 0, ci = 0, vi = 0;"], "all_classes": null, "length": 1502}
{"pred": "   if not exposedHeaders:\n        response['Access-Control-Expose-Headers'] = header\n    return response\ndef handle_404(request):\n    \"\"\"\n    View 404 page.\n    \"\"\"\n    return render_to_response('404.html", "answers": ["    exposedHeaders += f', {header}' if exposedHeaders else header"], "all_classes": null, "length": 796}
{"pred": "               }\n                oldDrivers.Add(idlePool.Dequeue());\n                // Check if the next driver is too old to be kept in the\n                // idle pool. If it is, remove it and return it to the\n                // caller.\n                if (now.Add(", "answers": ["                    Driver d = idlePool.Peek();"], "all_classes": null, "length": 1070}
{"pred": "       return np.array([var])\n    return var\ndef _round_shape(shape, radius=None, resolution=None):\n    \"\"\"Round a shape to a 2D rectangle.\n    Args:\n        shape: A 2D shape object (e.g. a", "answers": ["        var = (float(var), float(var))"], "all_classes": null, "length": 3675}
{"pred": "st = player.getQuestState(qn)\nif not st : return\nst.setState(STARTED)\nst.set(\"cond\",0)\nst.playSound(\"ItemSound.quest_accept\")\n\"This is a stolen dignity\"\n\"This is a", "answers": ["CREATED     = State('Start',     QUEST)"], "all_classes": null, "length": 755}
{"pred": "\t\t\t\t\tdouble? seconds1 = this.Seconds;\n\t\t\t\t\tint num2 = (int)Math.Floor(((double)seconds1.Value - (double)num * 60 + (double)num1) * 100);\n\t\t", "answers": ["\t\t\t\t\tdouble? seconds1 = this.Seconds;"], "all_classes": null, "length": 1143}
{"pred": "           VertexDataStride = 0;\n            VertexDataSize = 0;\n            _attributes = List<AttributeInfo>();\n            _textures = Dictionary<String, TextureInfo>();\n            _uniforms = Dictionary<String, int>();\n            Program = 0;\n", "answers": ["            _attributes = new List<AttributeInfo>();"], "all_classes": null, "length": 661}
{"pred": "\nfrom cobra.solvers import optimize\nfrom cobra.core import Metabolite, Reaction, Solution\nfrom cobra.model import Model\n\n# Create a model\nmodel = Model()\n\n# Add metabolites\nmodel.add_metabolites(metabol", "answers": ["        for l in (self.reactions, self.genes, self.metabolites):"], "all_classes": null, "length": 1227}
{"pred": "\t\tfor(int i = 0; i < beans.size(); i++)\n\t\t{\n\t\t\tTumourGroupListVo vo = (TumourGroupListVo)beans.get(beans.size() - 1 - i);\n\t\t\tcoll", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 778}
{"pred": "\t\t\t\tif(current.width>0)\n\t\t\t\t\treturn current;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t", "answers": ["\t\t\t\tcx = lines[selectedLine].getCenterX();"], "all_classes": null, "length": 1861}
{"pred": "        mListView.setAnimation(set);\n        }\n\t\n\tprivate void fillData() {\n\t\tmNavigationList.clear();\n\t\tmCursor = mDbAdapter.getCursor();\n\t\tif (mCursor != null) {\n\t\t\tif (mCursor.", "answers": ["                new LayoutAnimationController(set, 0.5f);"], "all_classes": null, "length": 730}
{"pred": "HighestNumber = HighestNumber + 1;\n            }\n            ARow.FieldKey = HighestNumber;\n            ARow.Comment = String.Empty;\n            ARow.Level = 0;\n            ARow.Interest = String.Empty;\n            ARow.", "answers": ["                if (PartnerInterestRow.RowState != DataRowState.Deleted)"], "all_classes": null, "length": 803}
{"pred": "\t\tthis.classifier.predict(pssm, scoresSol);\n\t\t\n\t\tfor (int i = 0; i < scoresSol.length; ++i)\n\t\t{\n\t\t\tif (scoresSol[i == 0)\n\t\t\t\n\t", "answers": ["\t\tint[] \t\tscoresTmh \t= new int[length];"], "all_classes": null, "length": 569}
